(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    336951,       6284]
NotebookOptionsPosition[    335739,       6243]
NotebookOutlinePosition[    336095,       6259]
CellTagsIndexPosition[    336052,       6256]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "EXAMPLE"}], " ", "FILE", " ", "for", " ", 
    RowBox[{"QuaILS", ":", " ", 
     RowBox[{"Apochromatic", " ", "plasma", " ", "lens", " ", "lattice"}]}]}],
    " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", 
     RowBox[{"Author", ":", " ", 
      RowBox[{"Carl", " ", 
       RowBox[{"A", ".", " ", "Lindstrom"}]}]}]}], ",", " ", 
    RowBox[{"Uni", " ", "Oslo"}], ",", " ", 
    RowBox[{"28.09", ".2016"}]}], "           ", "***)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"IMPORT", " ", "QuaILS"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ParentDirectory", "[", 
         RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
        "\"\<QuaILS_1.0.m\>\""}], "}"}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "CONSTANTS", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SIc", "=", "299792458"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SIe", "=", "1.60217662*^-19"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SIme", "=", "9.10938356*^-31"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SI\[Epsilon]0", "=", "8.85418782*^-12"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SI\[Mu]0", "=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"SIc", "^", "2"}], "*", "SI\[Epsilon]0"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "PARAMETERS", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"E0", "=", "0.205"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"[", "GeV", "]"}], " ", "beam", " ", "energy"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "0.001"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"[", "m", "]"}], " ", "lens", " ", "radius"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d1", "=", "1"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"[", "m", "]"}], " ", "lens", " ", "separations"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "=", "0.033"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"[", "m", "]"}], " ", "lens", " ", "length"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]0", "=", "0.023"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"[", "m", "]"}], " ", "initial", " ", "beta", " ", "function"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"I0_", ",", "r_", ",", "E0_"}], "]"}], ":=", 
     RowBox[{"SIc", "*", "SI\[Mu]0", "*", 
      RowBox[{"I0", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"r", "^", "2"}], "*", "E0", "*", "1*^9"}], ")"}]}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{"m", "^", 
       RowBox[{"-", "2"}]}], "]"}], " ", "magnetic", " ", "field", " ", 
     "strength", " ", "for", " ", "a", " ", "plasma", " ", "lens"}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"LATTICE", " ", "DEFINITION", " ", "using", " ", "thick"}], ",", 
     " ", 
     RowBox[{"radially", " ", "symmetric", " ", "lenses"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tlat", "=", 
     RowBox[{"ThickLattice", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"d1", ",", "d2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "[", 
          RowBox[{"I1", ",", "r", ",", "E0"}], "]"}], ",", 
         RowBox[{"k", "[", 
          RowBox[{"I2", ",", "r", ",", "E0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", 
         RowBox[{"l", "/", "2"}]}], "}"}], ",", "False"}], "]"}]}], ";"}], 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"define", " ", "half"}], "-", "lattice"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fullLat", "=", 
     RowBox[{"SymmetricLattice", "[", "tlat", "]"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"symmetrize", " ", "the", " ", "half"}], "-", "lattice"}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"FREE", " ", "VARIABLES", " ", "for", " ", "matching"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"vars", "=", 
    RowBox[{"{", 
     RowBox[{"I1", ",", "I2", ",", "d2"}], "}"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"BEAM", " ", "DEFINITION"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{"\[Delta]_:", "0"}], "]"}], ":=", 
     RowBox[{"TwissParams", "[", 
      RowBox[{"\[Beta]0", ",", "\[Beta]0", ",", "0", ",", "0"}], "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"input", " ", "Twiss", " ", 
      RowBox[{"parameters", ":", " ", 
       RowBox[{"can", " ", "be", " ", "energy", " ", "dependent"}]}]}], " ", 
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"CONSTRAINTS", ":", " ", "\[Alpha]"}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"\[PartialD]", "\[Alpha]"}], "/", 
         RowBox[{"\[PartialD]", "\[Delta]"}]}]}], "=", "0"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"fileID", "=", "\"\<example\>\""}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"constraints", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]x", "[", 
        RowBox[{
         RowBox[{"R", "[", "tlat", "]"}], ",", 
         RowBox[{"input", "[", "]"}]}], "]"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[Delta]", "}"}], ",", 
         RowBox[{"SeriesCoefficient", "[", 
          RowBox[{
           RowBox[{"\[Alpha]x", "[", 
            RowBox[{
             RowBox[{"Rexpand", "[", 
              RowBox[{"tlat", ",", "\[Delta]", ",", "1"}], "]"}], ",", 
             RowBox[{"input", "[", "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
        "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"WriteMatlabConstraints", "[", 
    RowBox[{"constraints", ",", "vars", ",", "fileID"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"write", " ", "constraints", " ", "to", " ", "file"}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"MERIT", " ", 
      RowBox[{"FUNCTION", ":", " ", 
       RowBox[{
       "minimize", " ", "second", " ", "order", " ", "chromaticity"}]}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{"\[PartialD]", 
       RowBox[{"^", "2"}]}], 
      RowBox[{"\[Alpha]", "/", 
       RowBox[{"\[PartialD]", 
        RowBox[{"\[Delta]", "^", "2"}]}]}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meritFunction", "=", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "\[Delta]", "}"}], ",", 
        RowBox[{"SeriesCoefficient", "[", 
         RowBox[{
          RowBox[{"\[Alpha]x", "[", 
           RowBox[{
            RowBox[{"Rexpand", "[", 
             RowBox[{"tlat", ",", "\[Delta]", ",", "2"}], "]"}], ",", 
            RowBox[{"input", "[", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "]"}], 
      "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"WriteMatlabMeritFunction", "[", 
    RowBox[{"meritFunction", ",", "vars", ",", "fileID"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"write", " ", "merit", " ", "function", " ", "to", " ", "file"}], 
    " ", "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.681804739630487*^9, {3.68180903057108*^9, 3.6818091516171713`*^9}, {
   3.681809236472477*^9, 3.6818094186394*^9}, {3.68180946079333*^9, 
   3.681809480263811*^9}, {3.6818095253656187`*^9, 3.681809660038818*^9}, {
   3.681809694158737*^9, 3.681809731251833*^9}, {3.6818097727865067`*^9, 
   3.681809867919059*^9}, {3.681809938964981*^9, 3.681809969261677*^9}, {
   3.681810056402204*^9, 3.681810064056005*^9}, {3.681810534879551*^9, 
   3.6818105601085663`*^9}, {3.681811049448773*^9, 3.68181107735261*^9}, {
   3.6818111907568283`*^9, 3.681811192835641*^9}, {3.681811832028407*^9, 
   3.68181183417098*^9}, {3.681811901195223*^9, 3.68181190274437*^9}, 
   3.681820445598063*^9, {3.682336740394629*^9, 3.682336746982665*^9}, {
   3.68233755824478*^9, 3.682337558346409*^9}, {3.6823392711184597`*^9, 
   3.6823392721954107`*^9}, {3.682339337713887*^9, 3.6823393380480556`*^9}, {
   3.682339517115941*^9, 3.682339520856526*^9}, {3.6823396206078176`*^9, 
   3.682339620885262*^9}, {3.682339710594406*^9, 3.6823397106558113`*^9}, {
   3.6823397527131453`*^9, 3.6823397634710703`*^9}, {3.682339806199026*^9, 
   3.6823398475068893`*^9}, {3.6823399182025967`*^9, 3.682339918760067*^9}, {
   3.684069181963038*^9, 3.684069189378821*^9}, {3.684069229659348*^9, 
   3.684069239257554*^9}, 3.684069283919498*^9, {3.6840798792378693`*^9, 
   3.6840798878268423`*^9}, {3.684079937514958*^9, 3.684080003258009*^9}, {
   3.684080048903306*^9, 3.684080060943101*^9}, {3.684080796800376*^9, 
   3.684081150715021*^9}, {3.684081216558785*^9, 3.6840812522142553`*^9}, {
   3.684082721190896*^9, 3.684082810205926*^9}, {3.684083001675687*^9, 
   3.684083008120804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"I1", ",", "I2", ",", "d2"}], "}"}]], "Output",
 CellChangeTimes->{{3.6818047325202103`*^9, 3.681804739978269*^9}, {
   3.681809336910055*^9, 3.6818093632021637`*^9}, 3.681809393619829*^9, {
   3.681809462251692*^9, 3.681809480741968*^9}, {3.681809527102359*^9, 
   3.681809546334281*^9}, 3.68180987072882*^9, {3.681809954946505*^9, 
   3.6818099697821217`*^9}, 3.681810060500437*^9, {3.681810518116444*^9, 
   3.681810561161263*^9}, 3.681810731194047*^9, 3.6818110808695393`*^9, 
   3.681811147802292*^9, 3.681811193630735*^9, 3.681811443242517*^9, 
   3.681811572356173*^9, {3.681811652881567*^9, 3.681811657526637*^9}, 
   3.681811834755753*^9, 3.6818119032456017`*^9, 3.681817798090423*^9, 
   3.681820446918222*^9, {3.681820476992919*^9, 3.681820508791629*^9}, 
   3.681824239707559*^9, 3.682336764192132*^9, {3.682337560330027*^9, 
   3.682337570710915*^9}, 3.682337679039915*^9, 3.682337851718506*^9, {
   3.682339273696171*^9, 3.682339299718032*^9}, {3.682339342368618*^9, 
   3.6823393577258*^9}, {3.682339451109276*^9, 3.682339464689711*^9}, 
   3.68233952189412*^9, {3.6823396505067883`*^9, 3.682339664255896*^9}, 
   3.6823397126527*^9, {3.682339753876452*^9, 3.682339764540544*^9}, {
   3.682339807352562*^9, 3.682339848406136*^9}, {3.682339909411891*^9, 
   3.682339919737521*^9}, 3.683265675146229*^9, 3.684065905787281*^9, 
   3.684067158188365*^9, 3.684069113147283*^9, 3.684069242806623*^9, {
   3.684079955243531*^9, 3.684079975327949*^9}, 3.684080025839945*^9, 
   3.6840800618802967`*^9, 3.68408042108263*^9, 3.684080935271388*^9, 
   3.6840811765701437`*^9, 3.684081259566102*^9, 3.684081314797724*^9, 
   3.6840816266627007`*^9, 3.68408177498596*^9, {3.684082190041428*^9, 
   3.6840822029691353`*^9}, 3.68408225306833*^9, {3.684082316503366*^9, 
   3.684082339255693*^9}, {3.6840824080133553`*^9, 3.684082427562108*^9}, 
   3.684082503234393*^9, 3.6840825938616657`*^9, 3.68408281362825*^9}],

Cell[BoxData["\<\"/Users/calind/PhD/QuaILS/matlab/constraints/constraints_\
example.m\"\>"], "Output",
 CellChangeTimes->{{3.6818047325202103`*^9, 3.681804739978269*^9}, {
   3.681809336910055*^9, 3.6818093632021637`*^9}, 3.681809393619829*^9, {
   3.681809462251692*^9, 3.681809480741968*^9}, {3.681809527102359*^9, 
   3.681809546334281*^9}, 3.68180987072882*^9, {3.681809954946505*^9, 
   3.6818099697821217`*^9}, 3.681810060500437*^9, {3.681810518116444*^9, 
   3.681810561161263*^9}, 3.681810731194047*^9, 3.6818110808695393`*^9, 
   3.681811147802292*^9, 3.681811193630735*^9, 3.681811443242517*^9, 
   3.681811572356173*^9, {3.681811652881567*^9, 3.681811657526637*^9}, 
   3.681811834755753*^9, 3.6818119032456017`*^9, 3.681817798090423*^9, 
   3.681820446918222*^9, {3.681820476992919*^9, 3.681820508791629*^9}, 
   3.681824239707559*^9, 3.682336764192132*^9, {3.682337560330027*^9, 
   3.682337570710915*^9}, 3.682337679039915*^9, 3.682337851718506*^9, {
   3.682339273696171*^9, 3.682339299718032*^9}, {3.682339342368618*^9, 
   3.6823393577258*^9}, {3.682339451109276*^9, 3.682339464689711*^9}, 
   3.68233952189412*^9, {3.6823396505067883`*^9, 3.682339664255896*^9}, 
   3.6823397126527*^9, {3.682339753876452*^9, 3.682339764540544*^9}, {
   3.682339807352562*^9, 3.682339848406136*^9}, {3.682339909411891*^9, 
   3.682339919737521*^9}, 3.683265675146229*^9, 3.684065905787281*^9, 
   3.684067158188365*^9, 3.684069113147283*^9, 3.684069242806623*^9, {
   3.684079955243531*^9, 3.684079975327949*^9}, 3.684080025839945*^9, 
   3.6840800618802967`*^9, 3.68408042108263*^9, 3.684080935271388*^9, 
   3.6840811765701437`*^9, 3.684081259566102*^9, 3.684081314797724*^9, 
   3.6840816266627007`*^9, 3.68408177498596*^9, {3.684082190041428*^9, 
   3.6840822029691353`*^9}, 3.68408225306833*^9, {3.684082316503366*^9, 
   3.684082339255693*^9}, {3.6840824080133553`*^9, 3.684082427562108*^9}, 
   3.684082503234393*^9, 3.6840825938616657`*^9, 3.684082813919682*^9}],

Cell[BoxData["\<\"/Users/calind/PhD/QuaILS/matlab/meritfunctions/\
meritfunction_example.m\"\>"], "Output",
 CellChangeTimes->{{3.6818047325202103`*^9, 3.681804739978269*^9}, {
   3.681809336910055*^9, 3.6818093632021637`*^9}, 3.681809393619829*^9, {
   3.681809462251692*^9, 3.681809480741968*^9}, {3.681809527102359*^9, 
   3.681809546334281*^9}, 3.68180987072882*^9, {3.681809954946505*^9, 
   3.6818099697821217`*^9}, 3.681810060500437*^9, {3.681810518116444*^9, 
   3.681810561161263*^9}, 3.681810731194047*^9, 3.6818110808695393`*^9, 
   3.681811147802292*^9, 3.681811193630735*^9, 3.681811443242517*^9, 
   3.681811572356173*^9, {3.681811652881567*^9, 3.681811657526637*^9}, 
   3.681811834755753*^9, 3.6818119032456017`*^9, 3.681817798090423*^9, 
   3.681820446918222*^9, {3.681820476992919*^9, 3.681820508791629*^9}, 
   3.681824239707559*^9, 3.682336764192132*^9, {3.682337560330027*^9, 
   3.682337570710915*^9}, 3.682337679039915*^9, 3.682337851718506*^9, {
   3.682339273696171*^9, 3.682339299718032*^9}, {3.682339342368618*^9, 
   3.6823393577258*^9}, {3.682339451109276*^9, 3.682339464689711*^9}, 
   3.68233952189412*^9, {3.6823396505067883`*^9, 3.682339664255896*^9}, 
   3.6823397126527*^9, {3.682339753876452*^9, 3.682339764540544*^9}, {
   3.682339807352562*^9, 3.682339848406136*^9}, {3.682339909411891*^9, 
   3.682339919737521*^9}, 3.683265675146229*^9, 3.684065905787281*^9, 
   3.684067158188365*^9, 3.684069113147283*^9, 3.684069242806623*^9, {
   3.684079955243531*^9, 3.684079975327949*^9}, 3.684080025839945*^9, 
   3.6840800618802967`*^9, 3.68408042108263*^9, 3.684080935271388*^9, 
   3.6840811765701437`*^9, 3.684081259566102*^9, 3.684081314797724*^9, 
   3.6840816266627007`*^9, 3.68408177498596*^9, {3.684082190041428*^9, 
   3.6840822029691353`*^9}, 3.68408225306833*^9, {3.684082316503366*^9, 
   3.684082339255693*^9}, {3.6840824080133553`*^9, 3.684082427562108*^9}, 
   3.684082503234393*^9, 3.6840825938616657`*^9, 3.6840828151408787`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6840824253596478`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"DEFINE", " ", "MINIMIZATION", " ", "PARAMETERS"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lowers", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "330"}], ",", "0"}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"lower", " ", "limits"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uppers", "=", 
     RowBox[{"{", 
      RowBox[{"330", ",", "330", ",", "4"}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"upper", " ", "limits"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ntry", "=", "10"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"max", " ", "attempts", " ", "without", " ", "success"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Ntotal", "=", "50"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"max", " ", "attempts", " ", "total"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Niter", "=", "10000"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"number", " ", "of", " ", "minimization", " ", "iterations"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"WriteMatlabMatchingParams", "[", 
     RowBox[{
     "lowers", ",", "uppers", ",", "Ntry", ",", "Ntotal", ",", "Niter"}], 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "PERFORM", " ", "NUMERICAL", " ", "SOLVING", " ", "in", " ", "MATLAB"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"RunMatlabMinimizer", "[", 
      RowBox[{"vars", ",", 
       RowBox[{"{", "}"}], ",", "fileID"}], "]"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"run", " ", 
     RowBox[{"MATLAB", ":", " ", 
      RowBox[{"get", " ", "best", " ", "solution"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solLat", "=", 
     RowBox[{"fullLat", "/.", "sol"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "solution", " ", "lattice", " ", "found", " ", "by", " ", "MATLAB"}], 
     " ", "*)"}], "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ7XTRdW9d3mvHH7xz94HoDXt7roBoWf5jYPqYaX1g
PZCWOs8XBKIP5Z1LANF/8nYlgmjjmokZIPrb9MpMEG0xecMqEN1yZTOYnnTo
2y4QbWfPsxtEX0sQOwGi93RuOQ2ij3SLzWoC0vc+y4LpCcyNz5uBdMncitcg
mnmTXEpD/mtHhVhFMP38PZ9VI5A+MzXEBkQv+dztDKLfTVkEpvsucPqD6KY+
HzB9zCk2G0SfaEsE03scPV+fLXrtyPLC6g2IVrkYUngZSBsGLJ4EorccuCF7
BUifmWOmAKKtwpknguhJUZxgOurKjMUgOnfXfDANADBiqvY=
  "]],

Cell[BoxData["\<\">> SHOTGUN MINIMIZATION for PERTURBATIVE CHROMATICITY \
CORRECTION\\nSearches parameter space using shotgun approach.\\n--- \
Tolerance: 1e-10 (func.), 1e-10 (params), Evals: 10000 ---\\n--- Max \
attempts: 50 (total), 10 (same step) ---\\n--- Upper limits: [330 330 4] \
---\\n--- Lower limits: [0 -330 0] ---\\n> 1 attempts made.\\nMin. value: \
1.99e+06 -- [40.1 -73.9 4] (match: 8.6037e-26)\\n> 10 unsuccessful attempts \
made.\\n \\nBEST SOLUTION: 1.99e+06 : [40.13 -73.87 4]\\n\"\>"], "Print",
 CellChangeTimes->{{3.684081911414036*^9, 3.6840819232455177`*^9}, 
   3.6840819609896507`*^9, 3.6840821817558126`*^9, 3.684082632262547*^9, {
   3.6840826812446623`*^9, 3.684082688558649*^9}, {3.684082819766231*^9, 
   3.684082826430872*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"I1", "\[Rule]", "40.12561891738003084`18.60342174423735"}], ",", 
   RowBox[{"I2", "\[Rule]", 
    RowBox[{"-", "73.8690667592655501`18.86846261230295"}]}], ",", 
   RowBox[{"d2", "\[Rule]", "4.`18.602059991327966"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.684081923273024*^9, 3.684081961015867*^9, 3.6840821817827597`*^9, 
   3.684082632318853*^9, {3.684082681271896*^9, 3.684082688570468*^9}, {
   3.684082819776861*^9, 3.684082826442696*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "PLOTS", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TriBeamSize", "[", 
    RowBox[{"solLat", ",", " ", "input", ",", " ", "0.01"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"plot", " ", "beam", " ", "size", " ", "with"}], " ", 
     "\[PlusMinus]", 
     RowBox[{"1", " ", "energy", " ", "offset"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLatticeFunctions", "[", 
    RowBox[{"solLat", ",", "input", ",", 
     RowBox[{"{", "Qx", "}"}]}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"plot", " ", "phase", " ", 
     RowBox[{"advance", "/", "tune"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"PlotBeamSize3D", "[", 
    RowBox[{"solLat", ",", " ", "input"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"visualize", " ", "in", " ", "3", "D"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PlotChromaticLatticeFunctions", "[", 
    RowBox[{"solLat", ",", "input", ",", 
     RowBox[{"{", 
      RowBox[{"Wx", ",", "Ax", ",", "Bx"}], "}"}]}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"W", "-", 
     RowBox[{"function", " ", "and", " ", "its", " ", "components"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"PlotChromaticDependence", "[", 
    RowBox[{"solLat", ",", "input", ",", "input", ",", "0.03", ",", "6"}], 
    "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"chromatic", " ", "focusing", " ", "dependence"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PlotEmittanceGrowth", "[", 
    RowBox[{
    "solLat", ",", " ", "input", ",", "0.001", ",", "0.1", ",", "20"}], "]"}],
    " ", 
   RowBox[{"(*", " ", 
    RowBox[{"plot", " ", "relative", " ", "emittance", " ", "growth", " ", 
     RowBox[{"vs", ".", " ", "energy"}], " ", "spread"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PrintEmittanceGrowths", "[", 
    RowBox[{"solLat", ",", "input", ",", 
     RowBox[{"{", 
      RowBox[{"0.005", ",", "0.01", ",", "0.02", ",", "0.04"}], "}"}]}], 
    "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"print", " ", "emittance", " ", "growths"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.681810094838468*^9, 3.681810161066456*^9}, {
   3.68181019250089*^9, 3.68181019641702*^9}, {3.681811011788128*^9, 
   3.681811024273415*^9}, {3.681811167078094*^9, 3.68181116711553*^9}, {
   3.681811867362611*^9, 3.6818118730967417`*^9}, {3.68181197781441*^9, 
   3.681811978292912*^9}, {3.6818177664386578`*^9, 3.6818177866412077`*^9}, {
   3.6818204366314487`*^9, 3.681820436804904*^9}, {3.6818206007025127`*^9, 
   3.6818206035095*^9}, {3.6818215773463182`*^9, 3.68182158124289*^9}, {
   3.681824488846106*^9, 3.6818244914997168`*^9}, {3.6823376528397083`*^9, 
   3.682337666717269*^9}, {3.682337711254156*^9, 3.682337716546741*^9}, {
   3.682337843348064*^9, 3.682337843424961*^9}, {3.683265632969605*^9, 
   3.6832656737019463`*^9}, {3.684065903525902*^9, 3.684065903708283*^9}, 
   3.6840660738691607`*^9, 3.684080120480146*^9, {3.684080150558508*^9, 
   3.684080152427322*^9}, {3.684080208476984*^9, 3.684080311916964*^9}, {
   3.684080350816575*^9, 3.684080352975192*^9}, {3.6840804305617237`*^9, 
   3.68408050389782*^9}, {3.684082844804253*^9, 3.684082966791675*^9}, {
   3.684083334027462*^9, 3.684083360537451*^9}, {3.684083755618384*^9, 
   3.68408375578508*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJzt2PtfzmcfAPBIKErnwy0l2h4iOczYxHXZSkIHqi1aktOWU0VIkz0rbY8V
U6jE5imMUYyis89Vd8l5QsnanBpNqYyEB/Nc1/fzvV6v57W/4Pnh9kNe1+vu
/n6vw+fw7nKaHzlrUXc9PT1b/kP8P3znSc/5Gw5Ap1nL+ipHO9bl13IjJns/
tE8I22Psa8dcIO3Iqyk58GHRbdO52XbMt63NKKVnDmSYBkdNPGDHPD7zGLzv
djZEmuWFhx+yY/dvXqfglg05sb8kTy60YzOsmtZOub4bjM/Ve+98YMfCVuw/
q1m6C4z7vDbp/9SOvfEs8vbIy4DqsvyWcaYa9kp5/w44mR5lcnWAhs3o4/9X
ZWsaJHrPG2PuqmGORhP/YzcrFYzfKsycM1bDPlKenwKpX3hlFHygYf/YlLrT
aUAK6MVeWTnKQ8Noy/FLvW8kgWb4wetefhrW0188Pwn+uPnLwO/4eMYCS/ux
0UlQ/+ixSzMf11qeIQFjEmD8gxH99AI1bIny/PXgebTQtDhYw16ezyo4On89
0IYDgU/4OGXz2d27flwB/oN7xt0P1bA05feXwfc7LxS7zdWwz/sdDn/TvgTO
fB50KpSPz/3H82jwt6OgM/b3rrYwDdNT/m0sGxv36rs3fBzkEH+Kf04G/tyu
fL57ruE0/n2yqaVO+f5jS+X55EVdQIl4/uj1iSf5+8mqzlTl/aXm/Xfx+ZGz
3cqDxPw0OH8SOL/KTMx/yfHefoFjEohcX6b3y47DUUkkacSfGxv5+m8q+59E
9jasGST2J3Zf8SC4kUSaNr4JGc/HI3C/iQks3Sn226q+pZdmVioZesdwlziP
oxnzW/l5kcXvZbwrzusPPE/ycmWOmTjPsXVbQvh5kzbf0jZx3g3PmnJ5PJAz
025ZiHgYj/FC8of18BXx0nzio694PBEZT12L9EbyeCN9PtVbLOLNA+ORTH6h
XS3isdY6PpPHK2l0CLcV8foQ45kkv87ZL+J5q8G7QTzeSUy+a4KI90Ex9bd6
1+aSNRmjkqribVm/La+nHKzLJZN+Tr02jo8nKvPJJfk1BkXd+PiwQ5QDacwl
E69XjFy63pZpOo4dDmv+iZx3rfHLK7FhXsp8jpOHXhci3gTYsG/bExsNPfLJ
HO83i+LuWrMzF1pbU6efIA51t9aeM7Jmsb4fvrz9zxMk+rrT+YOdVqxDme8J
Mt134QbDe1ZsscGvNp/NPUnOJ3y6Zfk3Vswpf5XJb1mFJKv2deDQDkuWefz+
wVD3YmKRXp22w8CSVV5wzn6xvZhojSNLul+zYHtNh/wW/6SYVJtvWXI5w4LN
6Mqv8I8uJaeT1yXk7DNnVFlfGXm09tDHk7LNWLmbU9Rdt3KSM31AXu9wMxYX
mDOnMbacLPN3D613NmOW65blHrl8inzsM+f9sYam7Ouatt7uJ4D8Xly9cuVC
E5boEzredwAjQ+zr9hQtMGYlE+wLLg5hZPig2VNWjzNmnaWRe23eY2RqzF3T
Xh192eTykuT664yUfRkV7uxqxD5J3hG9YFgFWaucR2/WrcOv8emaChJ0+hNN
+rOebGnetDubDSpJVMpyi8QsfTbbZfa953x8WlmfPvsypWCDc89KoknyNSxM
12dTlfOoJO0T9W23bdNn9Y0soia+koSmVW8ran0D/a5Zz2vYU0lclPm+hksT
vfu7/FZJ5j62DphV9xyezuuu3dVUSf46mOfu7v0cHhvkTZrSVkkMiMW11tnP
gDgnZweYa0mN8v4nkHWl4s8oVy0J97D8PcPkESRWRs8qmKwlpuOcm/UuPYDW
mbkj9/ppyVnl95vA2qu69K0QLUlY2lgb8vBXWDEw4Jvdi7Sk2aPVfjtUQs5j
F3D9TEuwTrCyneuebBKfjzFyceWfk5BNR0vE97ulepbw75OqEEs38fwKfD6J
6eHsL94/YM0IvW6XHpBpS9M6xPxW9Hqngc+PaC1ivxfz1+L8iVzf+/d/WM3X
R8ottSDWH1zWaxhfPym7qrUS+1OQYhvN94dc1Xt70469leRt3D9Sqndnkdjf
uX0LN/D9JXL/G95JaU7bpk/vDLeME+dTZF/26mS6Pr1fW31TnF8Vnh891NhW
J873whOf0fx8aeS2iHpx/tNH9TXm5087+1REiPhYjfFBy6cFfyXiJ6r40iwe
P1TGF3P8tblnR1+6w3P2ERF/W62Ovcvjj86wTxgh4hPna0zTai5XTeDxe8dv
5s88fmn+3cHZIr5tHx8dzeObNsZnef5P/NOTY5MXivxYEDppP88PKvNnm02Y
F88funBkj5Miv0bZbIrj+UVHXRxWLfIP12dBy65s2SHyM9Fx63Gen1Tm7zOr
9Rt5/lJmP0xf5PecNQE+PL9pgMGLEJH/lwud5vH8p7I+1BvrRfP6QEfNL+8Q
9WNQrY+W1w+aaV1yUdQXe6wv9GtDuCzqz5hFR+by+kNlfepTMySM1yfaNe5e
tqhfU5ocvHn9oscWNU0X9W3z3plOvL5RWf88P5x5lNc/urXf+ndEfTTeNfUS
r4/U0feLTFE/8TxsqTN6gjxFT1BZf1VPUHv0BPFAT1BZvzPRE9QdPUGi0BNU
9YSs/1T2B9UT1As9QVRP0Hb0BFE9QWX/OX0kpSzbXkPHoCfIRvQE7YeeICbo
CSr7Wxp6gkYe2j5O9L8Bg9+fw/sflf1R9QP1z3O/Kfqn5YrIRN4/6WX0g+yv
NHTAgY++mxxPsjzMHyYGa6jsx1PQEzQbPUEmoyfowxTFE0T1BJX9XvUEbTRR
PEFUT9BzTxVPENUT9G+eoEGDFU+A6gnqHqZ4AlRPUOmV088qygfy8UX0BKie
oNYWiidA9QSVHgpAT1DVE9JLNMwy21V4yiYmajj3FJXeUj1Bl6/rXyI89tPl
T29wj9Fj4/v+JLzW8lZpDPcalZ4zRl/QoegLUH1Bq9AXoPqCSi9ubSoAcb5T
0Reg+oI+Ql9ADfqCSo8eR1/Qe+gL6VX6F/oCjNAXVHqXoi/o2qtNK//w4B4e
bfSLeY4dvRDoYhNZvg9u+SRsuBhhR6Wfy5dtHjoowI5mojdgFXqDfq/k+48Q
1OBmVdZhS4PmRYevqs0FmT+26A9wR39QL8w/OIb+oCXoD5iA/qCO6A84h/6g
MzC/oQX9QbejPyAY/UEvoj9A1od49AdEoj9oJ9YX8EZ/0OXoDziD/qDO6A/I
QH/Q3Vi/wAz9QavRH1CB/qA/oD9A1j9f9AdUoT+oB9ZPaEd/8FxX/AH/Rn9Q
1R8g6681+gOC0B/0C/QHdKI/qOoPkPW9FP0BQ9AftAv7A1D0B/0A/QGF6A+q
+gNkf+mO/gB/9Addgv6AWPQHjRnqfvgVH8v+pfoDLNEfdBr2P/hhz42Vjbz/
+UWGk+VzKtX1dKPX0SMwEz1Cbmpub+b9FGQ/vYgegQj0COlCj8Cf6BFy5cWP
gwqNtSD7t+oPCER/ENUf4IT+IKo/QPpA9QdMQ38Q1R/g4Kn4g/TwGayM/+YP
OIT+ANUf8GCr4g9Q/QHSN6o/YBL6A1R/QAT6A662b3QU85d+OoXegED0BpSi
N+A0egMa1sSFcK+B9FoZegOC0Rsg9/s0eoOp3oAT6A3m/+LqPnFe0osH0BvQ
iN5gqjfAG73BVG+A9KjqDViB3mAynorQGywdvQFb0BtM9QZID3+F3oDn6A1W
gN4AG/QGU70h450VoTcgHL3BZL5sRW+wxegNGIneYG7oDZDeP4XeANUbTObr
U/QGq0BvgOoNthy9AVXoDSbrwTX0BtuOvgD598u/0Beg+oLJ+mOIvmDP0Reg
+oJVoS8gGX3BZH3zQF+wdPQFqL5gGvQFyL/P/n5fobu/0N1f6O4vdPcXuvsL
3f2F7v5Cd3+hu7/Q3V/o7i909xe6+wvd/YXu/kJ3f/H/fn/xX685RVI=
      "], {{{}, {}, 
        TagBox[
         TooltipBox[{
           Directive[
            AbsoluteThickness[1.6], FontSize -> 16, 
            GrayLevel[0]], 
           LineBox[CompressedData["
1:eJwl1EWUEAQUBdApYAKQlEbpkO5GWmlGQqWHzkGU7u4S6W6kyyClu7vBAhSU
7rxzWNz3N2/7frqo6MiOgQEBAXFFzA0imBBiEZs4hBJGOBExfeIRnw9IQEIS
kZgkJOVDkpGcFKQkFalJQ1o+4mPSkZ4MZCQTmclCVrKRnU/IQU5ykZs85CUf
+SlAQQpRmCIUpRjFKUFJSlGaTylDWcpRngpUpBKf8TmVqUJVqlGdGtSkFpF8
QW3qUJd6fMlXfE19GtCQRjSmCU2JohnNaUFLWtGaNrSlHe3pQEei6cQ3dOZb
vqMLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCbwPRP5
gUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS/mRZSxnBStZxWrWsJZ1rGcD
P/Ezv/ArG9nEZrawlW38xnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zm
DGc5x3kucJFLXOYKV7nGdX7nD/7kL/7mBje5xT/8y23u8B//c5d73OcBD3nE
Y57wlGc85wUvecVr3vCWmPEHEkQwIcQiNnEIJYxwIgLf/4t3DZeBnA==
            "]]}, 
          RowBox[{
            RowBox[{
              RowBox[{"43.47827928069972`", " ", 
                SuperscriptBox["QuaILS`Private`x", "2"]}], "+", 
              
              RowBox[{"5.164663219314747`*^-8", " ", "QuaILS`Private`x", " ", 
                "QuaILS`Private`xp"}], "+", 
              RowBox[{"0.02299999026051399`", " ", 
                SuperscriptBox["QuaILS`Private`xp", "2"]}]}], "\[Equal]", 
            "1"}]], Annotation[#, 
          43.47827928069972 QuaILS`Private`x^2 + 
           5.164663219314747*^-8 QuaILS`Private`x QuaILS`Private`xp + 
           0.02299999026051399 QuaILS`Private`xp^2 == 1, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            AbsoluteThickness[1.6], FontSize -> 16, 
            RGBColor[0.880722, 0.611041, 0.142051]], 
           LineBox[CompressedData["
1:eJwV0VVjFgQAQNFvo2FsbIMxULq7Q1FaOkdKSkuXIhi0ktLd3Y1Kl3SDoHSH
lICkhMDh4dw/cNM17xzTKSgQCIRIYkIJIwnhRBBJUpIRRXKiSUFKPuBDUpGa
NKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhTlIz6mGJ/wKcUp
QUlKUZoylOUzylGeClSkEpWpQlWqUZ0a1CSGWtSmDnWpR30+pwENaURjmtCU
L2hGc1rQkla0pg1f0pZ2tKcDHXk/ozNd6Eo3uvMVX9ODb+hJL77lO77nB3rT
h770oz8DGMiP/MQgBjOEoQxjOD8zgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZ
zGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyy/8ym+sYz0b2MgmNrOFrWxj
Ozv4nZ3sYjd72Ms+9nOAgxziMEc4yjGO8wcnOMmf/MUpTnOGs5zjPBe4yCUu
c4WrXOM6N7jJ39ziNne4yz3+4T4PeMi/POIxT3jKM57zHy94ySte8z9veEsg
OBAIIphYxCYOcYlHfBKQkESEkJhQwkhCOBFEkpRkRJGcaN4BA3aDRA==
            "]]}, 
          RowBox[{
            RowBox[{
              RowBox[{"43.47827928069972`", " ", 
                SuperscriptBox["QuaILS`Private`x", "2"]}], "+", 
              
              RowBox[{"5.164663219314747`*^-8", " ", "QuaILS`Private`x", " ", 
                "QuaILS`Private`xp"}], "+", 
              RowBox[{"0.02299999026051399`", " ", 
                SuperscriptBox["QuaILS`Private`xp", "2"]}]}], "\[Equal]", 
            "1"}]], Annotation[#, 
          43.47827928069972 QuaILS`Private`x^2 + 
           5.164663219314747*^-8 QuaILS`Private`x QuaILS`Private`xp + 
           0.02299999026051399 QuaILS`Private`xp^2 == 1, 
          "Tooltip"]& ]}}], {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{-0.4714981496256289, 
          0.5295818104915306}, {-0.4714981496256289, 
          0.5295818104915306}}]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         PointBox[{{3841.6838557902533`, -52.61192418837587}, {
          3841.6838557902533`, -52.61192418837587}}]}, {}}}, {}, {}, {{}, \
{}}}}, {DisplayFunction -> Identity, AspectRatio -> 1, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 16}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {
       FormBox[
       "\"x / \\!\\(\\*SqrtBox[\\(\[Beta]\[Epsilon]\\)]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"x' / \\!\\(\\*SqrtBox[\\(\[Gamma]\[Epsilon]\\)]\\)\"", 
        TraditionalForm]}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{75, 0}, {60, 5}}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotLabel -> 
     FormBox["\"\[Delta] = 0\"", TraditionalForm], 
     PlotRange -> {{-1.3, 1.3}, {-1.3, 1.3}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"x (beam ellipse)\"", "\"y (beam ellipse)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 16, 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 16, 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.05499999999999999] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 16, 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 16, 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.05499999999999999] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 15, FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"x (tracked particle)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.05499999999999999] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 15, FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y (tracked particle)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.05499999999999999] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontSize -> 15, FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.682339904578404*^9, 3.682339923399783*^9}, 
   3.683265691949531*^9, 3.684065910376811*^9, 3.684080069194552*^9, {
   3.684080125805758*^9, 3.684080153389461*^9}, 3.684080312613277*^9, 
   3.684080354220458*^9, {3.684080423432478*^9, 3.6840805046144657`*^9}, 
   3.684081178430624*^9, 3.6840826996377697`*^9, 3.684082829645952*^9, {
   3.684083361270152*^9, 3.684083373915169*^9}, 3.684083628082326*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Hue[0, 0.8, 0.9]], 
        LineBox[CompressedData["
1:eJwVl3k4VP8Xx5Xs2WaGZoYZZkmLREglnFNK1rRaStmVkiwpVLKlSFIkKUto
V0RlqUiE8BWRIpUsMWOZISSVfvf3x33u83pe936ee97n3nueD8vt8DbPuSIi
Ir+J4/9ndVQtvX73nAntmK9HlHcV7HzK8RFz8YY7CQrvXFKqQHUDn9rkHAKt
yzvj0unVcMbu24tGiSjQ1u0UqRJUg8g5m8OFzrEwLfOp5M78GgipKFVPLb4A
GzRmwyn7auHXLxKvXCIJLoKiu/hkHRhQ3lQ+0ksBYauOdtiDeghYfiot1/kq
pDlvLWk42wgPzVcGXjl3HbK8S/STwptgyG3IKq44EyQqRe6839QMhQ33Z4sl
ckArvCpWNOAdaIpQC9Kd70KNkZ7cLrkPYCkbqHpl8h6EjskvCYaPsJ/edDbx
XB5EkLM7jwd2QK5+tGtUcT7cGlbQKur5BAn6wbGPJYqA/GmiS+dgN0h49xmm
OZeCdJzGR1pwP6QIFMdSlpbBrq/Khvoq30HjKNxOmiyDaIZb/rny77AhKo18
/txz+PaEt+uL2CCEp28ZPlVcAbd9qU65KXz4s/9LU6FEFZR7WLRblAsgKN0y
PNX5DYh4HnrzUnYSSncMHa/16wTzk52fc1rFMKyiWHtVbi94T0T0W+opoGFz
97sGAQ86/BkpfW5KWGyrdlpVhg9rts5t9wxRQv23e1Yd0uCDVl4pfeCCEi5v
6rwmt4cPW4fdC3nPlZDd2OaxtZ4PNkkKNIGyMkrX1U215w5BjVV78Uy9Mn6q
KKD3OI7Ag4TP/RQ9KjqAoFE3aARa90vfTrGgYnu51qmoxBHYGxt/kOpCxeYX
93q5tSPwffzgrMp5KlY/y83bpz8Kdn/SLTkDVFy3tndvie0oTN0NXXjzLxXL
y1iKUgdHoTjZS3QRhYYlpRlB926MwhJvq7ql62iYV5xqMiInAI7NgSDdazRc
suqD0HipAI7Zftv3+BENbz1VyknYKADl34v3GNTRMOvJJQmdEwJ4Liq7xXCS
hoyVLaXhVwRQP5Nm81yGjmmP5X1aCgXg1NRlY8KmY3JRfHMATwDu1i52623p
ePaqZ6XrXCF4pf0JLfWk46aOaLq0ghCcTo/THELpKE7LDSxkCGHtgTnrF8fT
sdqhqnGXphAefK2TX3yNjpGpPQtF1wghY96G4Z236bju45xT982EEJM5EV9Q
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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     0.4347826086956522, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\\!\\(\\*SqrtBox[\\(\[Beta]\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox["\"s\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Beam size \\!\\(\\*SqrtBox[\\(\[Beta]\\)]\\) vs s for 3 \
energies\"", TraditionalForm], 
     PlotRange -> {{0., 10.09899979389796}, {0, All}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Delta] = -1%\"", "\"\[Delta] = 0\"", "\"\[Delta] = +1%\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[0, 0.8, 0.9]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[0, 0.8, 0.9]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0, 0.8, 0.9], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> Hue[0., 0.8, 0.6000000000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0, 0.8, 0.9]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0, 0.8, 0.9]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0, 0.8, 0.9], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.682339904578404*^9, 3.682339923399783*^9}, 
   3.683265691949531*^9, 3.684065910376811*^9, 3.684080069194552*^9, {
   3.684080125805758*^9, 3.684080153389461*^9}, 3.684080312613277*^9, 
   3.684080354220458*^9, {3.684080423432478*^9, 3.6840805046144657`*^9}, 
   3.684081178430624*^9, 3.6840826996377697`*^9, 3.684082829645952*^9, {
   3.684083361270152*^9, 3.684083373915169*^9}, 3.6840836281778727`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
eUqCo9vzziE6FffF+ZmFc7n3k+9QoCYVlZULZIu43LV/tcAnLSo+jLyfoxTL
9ecRuUN9HRUrrRK92rj8scgyb3wbFU+2KV88FU9CkNl4cqQZFZ+uHD6Y8pyE
JQk1OatOUPE6W2PJFy77D774XHGSiqrHBuUUEknwvWrWN2NJRd1z8/bBXHZN
zFe1t6fi2aCiTPcXJBwbufVI142Kx9h9S46+JIEepHiz6S4VxcRGey+kkGCj
hQGOIVTUn7H1yeZybN3pG39CqRicfC3yL5elpd/5KUdw4/uHH76VSsLihN1X
HR5T8dBaP70Xb0j48umS52QiFd9ui+z/+5YEZauYS0FJVBxctMNhdzoJJ3iK
L1JeUfFlwPfrj7jM2iXssS2FG4/1IFI3g4TixueugRlUzNyQ7nw5k4T4n4wz
MgVUxHW7k9Tek9ARMen4qpCKDROX+i5zWU5P0XEzQcWEK+5fWFwO8z3tYFlK
xXT/x7Rb2SRc45+zSaqi4oZObf7fH0iwVNcy12um4pt801eLP5GgcOzm/qMj
VNQc12thECQIyCW5C4xx6+X/PfFAMQl/WsofF4xTUcP7Sg2Tyy0n+L7Qp6i4
zSUYW0pIeGh513Nqloq7RFa5TJaRIOEQHv9YkIY7b+/ZfqWKBB6NzLK9wjRM
ah2Kk64mYfQb6/uCCA2L9S2K3nKZcUZK94wEDQVvOJ4dqCEh1OVR5SZ5GrYq
SJ5wr+fmc/HpWBudhrNrf/sPNHDz0S2QvadJw5eMQkhoJGFgskt/+woaHrda
b27RREKFl+qtlJU0/K98mNXWTEKg73MFXx0aHqG8UJ1oI+HfjWRDJaRhy6wr
PZUkYcSw6gxzOw238ybVhfWQwFkyGHpzBw3TjlVme30hoeCWduvwLhpOWxSH
mvZx++vuW5cCExpS+ZLd1gyQMB3x/qGVBQ0tMgNSXo6SkGpsHD5pScOxOzan
s8dIOLWYvBtyioZXvFtWVY5z87so5PfJloaDR99t+/uL629Vgo+pPQ0blk19
oEyRsObbhksDDjR82h0bu22ahMdmts6yTjRUaDiuHPmHhL3iv+3TnGmo9vL5
j7K/JCxUhp7a4UJDx/D66JkZErL8qSc7ztEwwSvbYOMcdx63fDzi7krDPjuN
ea95EhQnTA4IuNFwn8/or4IFbv1T+/Y8c6ehUah0we9/JBFg77Nj40UaztlN
jr1aIImNyuIG9ZdouDQ58bbpPEkMNSVtdvCioSLRYzE5SxLx9/R1Zy/TcDdt
057IGZLg+3d6hdYVGtpTuuryf5NEy5cCqVs3aPj3ecN48ThJeCWfHdgWxq1n
YFSZ81eS0Lbh6W0Mp+GX9Sr3nvSSBIfyuOvsfRomzs1tLe4hiV3BJezohzRU
+RSpM95FEnLnKQWTMdz+Ktlt0N5EEjUa6TkhsTRs/vZ9IbeBJK5zdryjxtPw
XYyHZgiLJPoPXnhl+pxbr+Ify0XrSCJHpyIiLZmGlMyoC5dKSeLssEXIjhQa
6nuOzw4RJKGaNH6rI5WGVzX2ux8uJIkgWZUrAuk0JPJVx8dzScLsz8XTDtk0
nFGJLLRLIwmhd4I2sx9o+KRHab1pCkkUOT8zj8ylofMShZtar0hCs7PmYHEe
DR+Pt0bHPiOJqUJ1feUSGr7i3/PH5T5JsJ4l3O0t5er3idFffY8kUm+otb8u
p+FPobiG2jskcWqniveGKhoG/nFZF+NHEpuXx1bOVnP1+/MZVfiShJSgknxp
LQ3rNEWMqjxJoqKOknOAye0vD601O11IIiE9ileWzdXb/ntn/mmS8I2QO9bZ
QEPteOv4eWuSWHNUZvJMCw3nh++f6jxCEo87xXVudNOwjB7z9+lmknArDLux
m6Thtco5itx6ktj7TJQt+oWG+cNBKwy0SGLBTtgt5isN2X3hJwIoJNFmFEzY
9NPQYdLfNlKcJLI0BcWXf6eh7w0t8c18JOE4xJf+fpiGkqs33tKY4BBYd2ve
5ye3X4SceCwHOIRi+lITHKWh+IOuY7xdHILhvvhH3QQND/zm9bxZxiFeH7mx
9cEkd77E3F8a5HCIgA08ISenafijQnLFltccYuPfea3+v9z6KRjFJt/lEBKd
V33SZrnztNGRNunNIYYKZqs85mnY89D49rozHKI83pey5R+3X+p6nAyPcoh4
/79n/vHQ0ezSjilh5BDedt65nxfTMc/j+hEXbQ5x2Og3X+hSOprkrJ3aIs0h
+ASmXlIE6FjEu1HFlewmegYvTnEE6RhG+5voWNpN5NVOGL0UpqPV+eCc8cRu
4uFb94cuonTsXQh9XezfTbiGj/WtF6fjRcpar8sW3cQe9wu6fyToKFR0ci5F
p5ugHhkJKJKi4yqDP75tvN3EnN75hkAZOr7s2r/FpamLaJX7ob5Pjo5Tz4wk
3sZ1EVl/zrpLUugYHr8ustymiwjtGCxuVaBj+yoe3zfKXYRjgZNEvBId87em
LKGzOgmMH7B2UKFjy7kTLW98OglFf8cMbTU63kp6cOycfCcxafttYWwZHXeu
rHm7IrmDYOxwOJBLpePAoSqFlZodxGuNvrhrdDraamsc2HC/nQjgt/u5Q5OO
+zZ+fXP1axthOdizTWgFHUXeL5IrU2ojNtZah7K06NhRQg1J0WklJN5yOh+v
pOPJgUwzR40WYijMaqXVajpK/LqcxTfRRJS7dfnS1tIR88Ly1sc0EvGHLWoG
19Fx0fSTIZLeQHjrdShk6tBxps6Qvy2eRfwPcoazfQ==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, AxesLabel -> {
       FormBox["\"s / m\"", TraditionalForm], 
       FormBox[
        RowBox[{"{", "\"Qx\"", "}"}], TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {600, 200}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Qx\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.682339904578404*^9, 3.682339923399783*^9}, 
   3.683265691949531*^9, 3.684065910376811*^9, 3.684080069194552*^9, {
   3.684080125805758*^9, 3.684080153389461*^9}, 3.684080312613277*^9, 
   3.684080354220458*^9, {3.684080423432478*^9, 3.6840805046144657`*^9}, 
   3.684081178430624*^9, 3.6840826996377697`*^9, 3.684082829645952*^9, {
   3.684083361270152*^9, 3.684083373915169*^9}, 3.684083628243176*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
77ka5yOLKyo+4kd16EvOfKZKNuJ5iGvI3l22uC683L74MbaH+hVTPRPXkZka
L/zx/CwuQ+PQQgnPQ1zWCu/3XBipyA/o7HYM8fxfnRy5xfVqOtIXLTZeQzwP
cWnTuvyR1GWI60yXFvk9Ud3saaDxE+PJ4iofqLsQ11mjCvskjD+LqzSvLFHF
6ztXs+bSeI811RBXbuagAlzHrY5eXYjzl8UVl9ZTrSWq+zfqPl5GPA9x1Q8i
dfk0qcsQ1zaPrGLV3i34iVuHznikJwdxtfPo+OxVgBaf8U77dbsiVYjLgeqo
MKKjIK4qq58/xiOdM+jo7tM4/1lc1e0t7DC/q52eshfvFxaXTXtTC8TznOry
nX7hXkUQ15uxSsVYd+WOi1mBdBfsr5lLauOwTqvqP/Y24nmIy53qKD+ioyAu
H4VV7xDP8x+SY9YVf34GfDhg2ePniOf5mSPmx73JLgE+jKK69wvRvcCHU1Zu
0MO61CbPcxfSpcCHb7919cD12LjwwhO8b+Dc215pMeJ5bs65d77yITcgLqvZ
QdFYZxSmHVmBdDLE1dxhxyGsq5ekfXVBuhr4cDbVvYFE9wqyce0gcUH9MqFx
tSNxcbL9i6rh6zzUv1ix53GrLvfrhP3k0k7aIj/hOZ1aa0EF6/YRo36ew7pd
Nq72JC6wr70T9Gs+WkfLtXLWaB1h/HOhd2esk9P3VmlinSzb7/wet1n3g+Q5
oD3Nh9JlTfkA57Q93/boYIviCr+S3j4HxcXGi/q2OIb7l60Tno06ivoXOB/o
GNquHOHjvrPlZ4wPG597L+kX7oOOZNUH4z6I4elP858n+Q86R5/mfzLJf57F
deVa/8V4P65R8NNC+xHidTrf62VfpJ+V9zgewfqZxSX/nuzfCrJ/wf/Edp7N
kY7i/7zaO6A9mp+Np5SdnYX7l7PzFhbi/oX579DvxBSkx/iIyYcPYj/Z+MJ3
GwXcBx1U334K90EsrvGUrwwJX0FcXylfzSF8BXFt0XUTMX+GRHUJwDqZjZ/p
//pZLdLPwcFly/E4i+s55duhhG8hrsMuq+Px/C2s5tfg+dm4/KZpK3D/sq6r
QQruX5j/556uf4H9/Paryy/sJxuP6B5ktBz1QSfPGJvjPojF9fDf+gJxldD6
cpzUF4hLbtXj1P6o3tVv9ZmN14WNdz654KIq0s9yKXmnsH5mcfWm9fEDqY8Q
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
/dyd6GfAbTDVz+q/m/Qz4Ba+zysXx9Xnj/YpHBfDLTireQbGweBWO8VzCAeG
m0u7ut8/UP0z2q9mhvmM4bb909bDWGfMv1+ntgbpDobbBfel27AuOR+67RfW
KfC9PNpPmZJ+Cvi8jPZTLqSfAj5vRfspY9JPAW5+tJ/S7dbUT/39/+nyxaao
DnKJLwd+PGHyCvA8TPusDm+b+qy/33+kfdZ10mcBnq9on5VP+izg+Q60z3Im
fRb8HmyfF1rpON4Kyy0WRihehqeOWbt0jM9mj8urMD4MzwU/bV9jHXbIUfMV
5lGbjXcWNztXzbV/MujU7a+6fP3aH6Y5tQr8vPwMdcdgOX5S3Bfd2I+teXfr
2Mo7oxq5s/6PP8bMasaLdpMeN09uwW91KY7ud76W+zRQSFBB611V73yz8rky
3/9hflVrrR/cwRU5I6MrNXmbYT1bhmk1cA56DRsf8QWcifW0OMcsbb7+p9mI
6o4lXNb1+S7T7LO5VYWj91w90Z4/23zaPZtsRf5+9Mbpz9zKOa0796tnbe7E
71p+SXd1SnP+ceEKT+PGn9zV/fxc1bn6/Cb3ol3lH7T4AelXd009/ZuLvDr7
65uuXXmlhfEB5vk6fDvf3g6+3RV4744dQ4wPd+M3Peg9eOkjbT43NFN5y3w5
fvTO15N2KhnwJ3K6dZA3+MSdEhbM82j5nKt0+eY8J7GRy8jb/ly41IJfMiZU
Lxldb2V/a9bsnDK/YdOXU9v8VPg2CrcjtqPrr80f3s1a2py3ivz0YIOHPH+h
sHzvRnTV016eMzNYk5/E947uXfGTe9BuZGwfdD05d/pulW6deCW1xza1G5T4
7zsN+tShq+Wgl5WxSvq8+OHk/vhj6ryOT4s7N9DVTem8cXRlF97lSPybAGdN
fvDFsEP70JX9jsTuN4rTKvWLufHHnH2r0PVlN41+TsVK/PCxJ2eXj/vF1b6N
bwgSW/FaqfKKsTHq/JctnTKnX6vkxH69j7R6rMJHJtS7Kg3T5IeuLu7m6vqN
O5Z4+de8/EbuUc7cXbMjOvO6SRljZ/2s52xP/368+oMmP8jh+7od97vwHapd
0yaNl+fX9r2/5f3nNnxWn6VfjCO687P6/573vTifmzkn84zZml9cb53uhiq1
arz1d4crgmVk0uq0VHf3l+r80jvtGmcntuJHuv6qtR0WmmRm0eXh2/EK/DYV
c4M4pVZ8m3ZHs53Plgoun9uGPvwkz9vSvN2TczYf5a1YuqJ1zutaBZHl7dVp
jyahvBWH6ivevjWqUWB5u/eJXk+N5BaizpPXZX3O1wosb0d7LPhdif/fjuKG
y1paPwSWt/7c1YUob4XVZqOzHvAFAsvbP30/nER5Kwx31r05xT5bYHk7+cBg
heHZiuLgjnF9n7qVCyxvPb25FShvxZnuC14aNf4UWN7Osb+chPJWPHFviOvk
078Flrex0+TSUd6KQ8e4tdjVXUFkeRv+K9cT5a14Merb283z5USWt8Xv4iej
vBWM05rx7i2fCyxvfTNKosRLLcTGmf9Z4SvL2539Ok9E+Sqen7a1BuWvWE/z
toeP9WiUr+LlNodU8ZXlbf7LAieUr0Ki325lfGV520612TuUt6K+X8F+fGV5
+2hMoQPKV1Gu7d1KlL8iy9tt4xunonwV8ysc2+Iry9sAZeuuKF+FMe7dbqP8
FdJp3j4d83DYj3G/hH4lV46hvBVb07y9mz3WfMa1SmGT1S97lLciy1vLQE5x
pes3oY+6aTDKW+Exzdt3BV3s5/ysFyoTHANR3oosb11PKDafMl5e3Pz1JIfy
VmR525vbUFFWnC8YHxw7HuWt0Ifm7cyZG2Jw3nqSvBWX0bw909X9F85bU5K3
IsvbIye/3pl9tpTj1n54jfJWlOvffM1inRvcmj/R7+UQz8xdFSCPeebThCEZ
V3fVcmceveUwX831vKiL+ap0o+GBaNXWfFmfoLPjB1Zwrh9yFkxAV/hdLPq7
W/vp726xc9p59DnjPvq+HOP/pZT/lxD+53zp7xEp7bH7+QPxRYhdqCHmjQX0
91Ky6e8fqtHfv427WbVbpbaOe6m17TTmH50ebjMw/7A6uI7+/kwn+vsz87KD
fystbM2vbNZJe6j+R87hbr8E5UtVnMKl1ktjRurwakU60apbc7lbtrn9e5lV
wHOiUfT3Eh/Q38s17G4jRut1520+/mh+31SJlz+lXY6vLK4VVCfoE53AqXVY
uVdl4ktU59x0MP9URQwejvlH9WJAV+fEMu7cq/zDBipK/JZbt/YqGrXjd3aP
tZq9tJ6z+lV8CPPY7FG+gzGPwe/JuE04fQz1t5Vrj1/EdZ79Pvx++67/fOfx
f42z341PHhjXXvr9x/81zp4jK9H37tbS9+4OLrJI3pHTlQ/JM/kx4rkif9Zl
87c5hW35eWl1a3LGdOflajfnvRn6g2v0WD7dWK4Z4BNK9WcJ0Z+cBf1eTMny
bk3fhUyl34UcRcdr6PgrOp5Gf4/Lae24pu9FLqHfi8yk4zPpuOx3JBOqN/3z
HcnJ9Hs93f3SC6TfkZxGx7vRcRU67kLzZ5e/42hz/Y9C2LP4tTh/RvuveR2t
p80fGTZxi/rWXOH9seFveqL8kaN51frzsOt43H2qWR0e/+ZcMdxJTpfv2DFt
NZ5n4vaai3ge9j2aYsWT/3x38n+Ns98NO26Xmif9HuX/Gmff68moehMu/U7l
/xqvbU/yNmlhaRjmn6zcK+UDUd76L5k59HpOLndiqFxRztAfwqd1h+72R+vb
GEny+ci8msYeKkpiWcupPM7ncxHWDY7JP7j64Snao54riuW2eaNxnrB12UD7
6M6kj+a20PzvG7Lt2WTEhxOUXKrzUP4z/tk7ob0B4h0hIdHhM+ah2bdcrsbM
0uWPaU+ejMfbbT2ghXmJ8eoCyqs+hFchb6uvD3XE/lx6Unoa+6OcfKl/zuBu
PP972MieyP+EYU5B2P+5NJ+7dnnR+y2K18fzmRbOZ8bP+pSfTQg/w++qDYnb
loLrxyz9BbOwDvrk20u12cSPnMbwfrMQX4i+jl01MW8wHBbTcxKBnJNwsZTf
LFJTO+D6tHFlz3eY51j92krr11dSv4CX/K6rnsPz/3zy2wHPz+qaP61rY0ld
434YEf5Xlrdth+v1w93G790Q/8ueR70i51HcR1oXnBJ67MB6oL1F+dOdqC4w
nXCV6gQLohNAx36jesCM6AGuit5Xhd73PrmvwOrOLDq/LplfZOvuT9f9Bll3
6CN06Hlaf3KeBr/vN5Ti70jwFxielhTPDQRPcS7d13vovg4h+1qQp/vXkO7f
1WT/CgznPRTnaoIz9IlL6XmpETkvFeQp/2fSffSJ7CNBifJ/KN0vFWS/iNtp
/g+k+T+O5D98l+3DrENdcF93vk+aIz7vZPn8h+ZzJMlnkfFwO5q3S0jegp+G
9DzckpyHCwwHF1of55L6KNhTfutu12c9ro8pfsUtUX0EfD4Xkrp5k9RNoYjy
W8XBg5Z4nijvFcVNeFIcVtE6WErqoLCd8kkL3ZiTuF5sWztAFfvJ8PGn9XEb
qY/iWcon+1fduoTrzpfXKwNxvCxvF9DnYsHkuZjA8DSi9XQeqaeQVwVUz3gR
PSMAn5Q+T8PjJuHah/E44xNV2l9sIP2FyPD3pXXwAqmDIuOTHsv7vMX+Ty1M
/oj9Z+tSWkPqo6JnU30EvWdL+5Q5pE+BfC73I7oojOgigfHJa3fde/fQPt/S
Z0gEzkOGw1b63DOEPPeE/E+leqkz0Uugh2fQPs6K9HFiL5rnY6jO6Ux0Dujk
DbS/m036OyGf7us5VE+6Ej0J58Af6fPlOPJ8WWB8cpzqzA1EZ4qMT/4sIP2y
KemXob8Ion3xY9IXwznMbnoOY07OYeB5RBQ9h9lLzmHg+1mZRf1XGRX+4E6l
x9msn/Ie9I/OqNrjeHxHepkvHmfnGwPo+UY2Od+Ac/729HxjKjnfgOcjK+h5
Wjg5T4PnSkfpeZoTOU8Df/zF5/7KFSXc7IHRGc3Qlfkz+dD9p3i8WuW8tgq6
Mn+i6PlVV3J+Bf6co+dXuuT8Cp6rtjQn56KJ5FwU/Kmi56I+5FwU/Ok/cnfJ
GhR/ypWzjzEe/1968hp3z2Qtsn/QwrUS2/8vPcn8H0rPLdeQc0vwXy+XnFt6
knNL8Od1+K8e3lPeCwOyL+6Tzm8fNng5Ho8dtDpB6qfTzZuLEI5CiuW9OmUJ
nooBMefxuLfm7aEYZ2bvc7fnZfTvhQVrrdXWSfLBplv5Kzzu4rFpPB6Xff6l
Tp5/CbLPv3zI8y/4ftMWOr8zmV+Qnd+RzC/IPlfqRJ4rwXnaL/pc6SF5rgT5
v4g+x7xAnmOKss8xn5LnmODPbIpPMsEH/FGi+Kwj+IA/3+lzw4fkuSH4s5I+
NxxJnhvCOfx6+jz6EHkeDf60os+jjcnzaPCngK6vMVlf8GcGXd8Ysr7gj+Iz
8vy3P3n+C/58pc9/d5LnvzB/C5rPD0g+w/yHad6mkryF78dtpvvRlexHsLel
+1FJtWk/gv0LyidPCJ+AvSblk6uET+D3hJ99OnzAfGk7fkT9sQlqQ5VAt9dk
uBXg8ea5+4LxOLO3TVOIrLzSml88V2VjFboy+6Q1m4rx+Av1bUl4HL4j725s
qIL+fb+QhwrD0Hzp/6M/YvMU2Ru4Y/uSfWEzsf3/6iPYPP89fxKsOlRJ/NE1
PN5cYu92WXyPx8O0t7aQ3neBb8wg5J848/LMskqJ/+nGfdfh8WdTMk2k/t9x
js9F84ptzvx+ryLBp3rSoYFoXjFxw49eqhJ8mL0WsYfvQ/2k9reIvSjrzwzi
D9hnUH+eEn/A3obGW07iBXtvGu9ZEi/YJ1D8TQj+f+enOFcQnMF+GF1fd7K+
YH+dru8bsr5g/4Dmz3ySP2BfQfPHkOQP6KXftYE9cJ/j1/fBQ6QTod9Z+vmC
O+5zTt+z/Y36Hn4VfR+vu8z3sDzpeDc6nibznawq+v2IVPqdrP81fob6c47q
t/dEv8E56ozFZ41e1yrwTi4z1e581QU/zamOmkB0FJyfD42tHrF5vhzf5nD8
IXyOzuY/tL+nO9ZhTk5JziORLmbzxBxqeQfrsFSzgQex7mb4KNuS/rSM9Kci
ex6xzXPbrje1CqLnlJJkfL7L5rGnfWI86RPhXNQy4r27z3w5sdNcxWn4fDRF
4eho1doi7kNUStkS5J/1k61P0N/zTN/2uXGmA47HrZdcPMZfT+PZFOPNXflJ
AZfK8HOQ8PEr1+DnIExnmvqEr8d4KZ6xbGmP8JtHz8ey6PmYisz3oWTPr5Ko
Py8/ntXAuPXxnjAW48bumz648yqMv5bBC0eMfw/K5/J15L2sBfS9LM3/8V7W
/9/3mh5Sf6Iz/Adj3NqOCmmJ/eEp/uso/qsJ/uDnnZF/HuPxfrrztLGfDP9B
FH89gj8v0Pn7fPQywuth9jY4FMetQvFfuFBlEV6/KyHf7VE+QB760fP8cnKe
D3l1kObVHJJX4E/yyXZDkB9iGrdP741kvdJ0B9/H9tmpg85je9nz8yhyfg55
Hk3z8xnJz//jvwnxX2T+L6L+XyT+i7L+PCP+iLL+ZBJ/ID+vUfxbE/xhngcU
5z4EZ7C/S/PHlOQP7Bc7un/nkv0L8yTRvNIleQX7pRfdv+3I/hXv0Pmz6H6Z
RvaLqE7jNaT75QDZL6Idva8WfW6os67puaF4mq5XDeW984T3wJ8xdH+JZH8B
Pv3o/tIn+wv8XEuf01WS53TAA/Mpf94h/Al9ev2wu2aamnuSNtzeFPwl5u/v
mcuOD6DPcQY3T/Sfap8tjDuk7oGfQ3b4OXCf8v42/Mzh5afw+Nokhd14nD33
+U2f+4wkz3041qePPtS2Cp9TmFtbblJDfXl7Oo/9jNdx2P5+kP0TbM/691bj
VNvgvj3nq2Estmfz1151y5+M7IzuXX+M/x2bJ63wbA0eDymPeo/HTal9MX1+
WkGenwqjqD87z7gl4XPPM2bztzffmiu0o/NUdTOahe1vfg/ywPbsHP6ro0se
tlfIG5+A7eE7OPR7H9Po9z7+1/j/eh7B/LGn5xh3yTkGx/xXjyXx6pN4uf+n
rmuP6/n84vFFGaUoJRUzYe1XFMplfB8xl0RDm1HNJdnm55KGcr9syz2WW7OS
lGRNyshy6fuJflOj5jokExGxpFS0pN/ndM5zfPX79dfzep3X53We85zzfs7z
9JzzfSftvEfrDcP1sp9Hk5/7op/ZPx7k5wz0M7+TmJKf/0Q/87tKPL0b38V3
Y67rDSA8uCMeWL8f4WE24oH1SD8Hop857pr30M/R6GeOu/Tz5dv1fm4Un1J+
jd6dEvDdieWpVI94ifUIXcN+vCLsx2P5XepPiMb+BO3qBvxyecQvV0DvG3fo
fSMI3zeEfJ+JofeZHvg+wzxI/Yg/bSHxpy2h96WO9L4UjO9L4l36/Z1DAz60
R/R+ZRCO71fx+H6lXdd79uEWhVbC3qdfp8/3lWiXn3Ezz7r3hhdLEI9ZNvGY
FRMfSPhYUc8/ZkT8Y+Y3Xw1JCbUSriMCnD8aGJPuNsNMkz+2qTj2c/Ah3686
iuFhti2UQQfTnfq0zoV6tOTx+MbP7S3esCZpYxc1X6IRl165FPlV1ejieu6f
BHXwIcQ3sp94wFyJByxmxearPg5Womynz2dQl5y25Gkt1NOHjDcShsYdxfQZ
W1ZAHTPi7pRIqL8X2H+TeKTUVhjWxEZA3fNJu3MtdylthHWzwB8nZzQV+06l
VkM9Vbv++x3QFzA5MSAoJdRI5Hb02wH11wdRg0dCH4FjV7svWuRaijxlbBzU
a+OCS8dAv0HOi4jLKcnWYtPaOaFQ33WxSR8G/Qlzzrcb7LfNVtwI6RALdeGz
e5d5QD+Di9f3ymGjpqLyxMcroU5d6D1YMz66VhtUFbqrRa6hcEp42Arq2mt6
Kasc66q0R6KWzfXbZiyirpnp3K9rlPSV7SrOz3umTctOqk6ebyl239Ocgnp6
hVeO7TnxUDsp6v0AX29rYdbadWRFbnMleMqix2Zm5drqwLiLhm624mJWXhjU
688GRA3/APpMCJ/G9J4fiu/5isTnbqpHWGI9QreGcBhFdZObWDdR5HupHdWD
RmE9SLee8LY9v7j/1H0luseO8/KhbmtB+Il4lecC+BmA+FEkfmZWCyM9/ChN
CSeavAfFPlU1WmExMgzqzhIPV+YZhkB/hXnPr6b5P6jTSTzsMZpiNfHoc+3t
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
      None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnAf8V/P3xz+fO81ssrOFZJUiGoqQstMgRYgiZTUkNMxSmpTICJnZkpRV
KBmZIZGRlBF+9v/1/L7O7/H7Px69u+f7vue+P/e+7/t9xuucc3fodsHx5yeV
SuXyolJJdcyySuUatWWiv9GJ8ercSvQCnT+wrFTG6u+v1D9Oxy3VP65aqfyh
4zZqW+u60Wr/iL5Zx63FN1HnazOOjn+q/wfRt+jaHUW/pTEbaczb9PdS9d+s
42bqP1v0bzquUOshOtG1/xH9o+hbxbOT6J9ETxK9s+i3NU5jjTNFf/+tv/9S
205tqfqPUv9M7jWvVFaqnaL+S3VtO43ZSu1J3Wcr/f2i6KPUjlQbLp6O6n9C
7Wj9fbiu/1jtRvV/pzFP1Jif6O+ZnNe188Vzhuhn1U4WfZLaiWrjxL+Pzj8s
ejfG1zWfqY1W/6fqHy16U9FH6vip2ijRr4jveLUxoluL51XRJ6i9oHaE2lD1
d1P/DaK/Ef2Z6Ot0rW6r8onoa0XrMSsb6b+q7rOd6Km6r3o6N13XfCTGFup/
VHwfim4u+hGeT/Rhomdwj6KPFP0s9yW6tehnRF+gMXbSGFuqba6/n1I7TuP/
o/67Re8v+n3xNxX/A/q7lu7ha7Wj1b+O/n5IrQX3KZ4jxPOk/l4i+nDRT4he
LfoU0atFt+T+1K4X/3oa4wu1I3mv+q3J+v1CbbnoG8Wzjvq/YE5Ery36Y9HX
iNZjV67Vf8OZI/FfojE+1t+bqP9r9Y0Qz7qil4gelbr/SvF8mXl9jtBxM9al
rp2klqvtyZjwi14lei0dS7V6om/S8Xsd11c7Szw/sd7VNtY4N6r9LPpX9d+u
36or+m/Rd4neT3QrHT9Su0H0cTp+oXYr60fH19X6iN5PxwVqF4luqt86VO0y
0c/q2ITnE91EY84UfYjavuJ9Q62v+u/Vc+1Xeh33FU9jna+vdpv6D8g9z410
bpHaQNGNdXxL7XLRF4u/pXgPUntUz9FUf8/iN3X+XbUruWf1P6LWTP0P6niU
2hXcm3gvit87Q++3n9r3orvpeJnaStEH6/x3cc8HaLx2uvZSXful7utU8Wyj
/tns5cJ7tpH4V+jYUK2B2oFq54q/ga59Wa2/6P0ZK+anpa67Rdc8zxzp+Ay/
yfOI9221QeI5Qsd31G4SvVA8E+Keb9Y97KB5e4X1rXaM7u1i8ewtej57QnQ9
HeepnS96Lx1fVesluq3GWKAxTlM7WX3fqN2h/jf096lqd4puIZ45olvzPnX+
PbWr1f+97vlk/e7X+rufeDrq/LFqK9V/kvq/Uv/xal+qTRL/qTquVLtfdDvd
cy/d533IZNGr1DqKXqVr2+va78Q3WfT9oo/T2Kdr3C5qd4vnNJ37Xm266GN1
XKZ2i+jdNMZPameLPkR9i9WuEj1Nv7O/xnhU13+uMY/RmM/r3IXq21t9O6st
U39b9c9mXYtuJ/oF0U117T1qe4hnO42dqv80jbmT6IPUfwZrQPzHqn+u+Btq
zCfEu59aXfH8rNZDPF+J53jxvCSe1rpueuZ1wbvbM/d6Xi6e48Tzonge0PnG
Gusp8cwQfYLaCPG8I56DxHMn61r0waKnoW9EP6JxNhbPZTquX1rOXsTa0Lm3
1d9PdK3SsvhTjbeW2ubsfWSyfucL0R+p72HxbYgO0nG90nKqh+i1Rb+q/pfF
017XLNY1P2vsU9X/i3g6i6cU/TS6T/2dRa9R/2viP1X8H4v/N/Wfof6/1d9F
fZ+o7yp0p/rPVP8/rFGN00/XvMEaFt0i9ilyZm7Iignq36W03JkoetfScuQW
0buVlkETY3/so7a+/r5X7Qhkdeo5O1z0KPGsr/OZ2u+6h+669l/khfoHqe9C
tQ4aczOde1z8f+h4lniquqc/RZ8tOhH9l+hzRKei+4i/jv5eJP5zNdavas9i
v2jM3hrvLLVB4puPDBH9o3g76tofsTnEc5v61lFbV21tZA7yXGNuVdoumaK+
9dSaqr++rn1B5/YRvVLjPS96b9F11f8U7170VTpuWlp/XK3+O0Vvqd8Zov7N
S9s0a6VeU83FfzXPW1r3X48uSqw3vsDe0LntxbNM9N8aa2tkvvpy8Q8RPVL0
dqV1xlCdv0v09rr+obAHvkW/qP909f8hnjN5Lv09B3tGPB+K5yLmSP3bqP9F
9a/R8TTx/0f8v4juIvp30QPEs0FpnTqQNVta114neuvSdtj1jFPaDruJey9t
B9wgetvSeq6a2i5rxDtS/0al9S7GJnbfgSKH63fvVv8OPIue/ZDEOm2s+Hcq
LVv3qlpOIOcP0PlH0MVVy9vnQ/bepWv3ZYyqZfLskM/IpnpqPUNuI3t6V2wP
7YgsFr2DjturdRJ9i8bZReNMxc5R21Stjfo3TW3XHCt6d3S3+jdDbqptodaW
8dV/v+g6yHONc7fa7qITPUdtPU978dRJbe90Ef2Bnr2Zzj3IXOn8R2pN1H+9
+u9R/24aL1Pfv/Cpf7GOTUrvt/dEHyL6PtH/6nfeQ25ic6i/g/p/UH975lx/
z+AZU9tcp4veMbX91hWdpWtvVduYOQ8bbytkd2q770zx7JLaHuwuetfUNvVZ
ojdLfe/YgaPYm6XtvAYa73a1bTVOM435nI7NsRnE84/aeOxejFa1iTocrL6C
/SL6HvZcaftvf9H/UbsGfYT8zGz3HKQxnwwbYA+dX4NcE88YHXcsrYPvE++B
4ntcPNPUv29pGws7Cl2BHj9CPPdnthcO0b38Ir4B6s/Eu2vuZxyn486l9f1j
4j0ssT1+mPh/17nrxHOz+mqrbwPs49T29cnq3yq1Tc17r2iMdcXfWuQUjbOn
rrlX/LVT2+Anqb9W6vcJz/jQobuELYfuwva7Q2PsVdp2mSJ6j9J2253Ip9I2
xO3ovtI23K1hv2HztE5ts+FrTBVPvdK6fHLu+a2xKcU/W8fD1U7QuSX8jvgn
6vyuPL/o0eK5R+drqb2jaw8s/OxbiPdhtRPF86b6F+WWpy/r/H2F9cFr6lsY
svRGHV/JbVu/hiwMnfGQ+hqWtkV6pvYJnufZdb67zndG3omupftZT/3X0a+2
mmkW79TU++Uf8X0ZMn+ExpyX216/BL1Q2I8Yo+seqNqvaay+3vp7muidNMbT
qe2QTbCJUvtTH2uMz3LrjlfEP73wu3898bxA36b7qq92vHjeF28n8WyELtb5
HdW/V8X3Mz/2+zmp7bJnsA/V16HwPefqu0PtUESmjnWxXSqew9dz67A31c5U
e0r9PVLbgejE4/VbC9XfTW1K2JDHqZ2e2n58WDxdU9uYj4jultpGfVT0A/gF
pf2Qi1PbIPPV/6D6G5S2Oy8J/fua+u8M/Xu22geih6l/I/VfI7qr2nLRnVPb
k9iow7A71b5kDhP7aPB8jT1n9VDjr62r3xqOfNO4y6ueQ/ztDmr3iuek1L4z
dvUpGuNd9fdSOz+1zn+hYlvqArVXRF+U2m6aJ7pXahk5m37N64tq54pvro4n
aay3GQe9ofaSeM7QsavaE6Lv073tX9qfv5W1LfpI9pn6T9f1U8XTRn/PE397
tVnqa5fY9j8PWyKzzX1K1ZjBPeI/UeOcr/Zp1bJ4k6p9Z9bbktx66NrSfsCp
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
FiFzl4eueTTmAdmF/CWmOB/9Uvj+kYtPxvq8v3A+HHjqvYVz/sBoz47nRQ9w
T8Q10BH9c+dU8DfvdEa83z3VNyO3vlgS7wncCbx+Wuxr3heyaXisZdbx3rHe
wWF3inW0INYSa2xerCXey0vx3pEHyIUrQgYgN9vFnM2MueoX66dj6IpnY0yw
ZDBlnhe9hs5gP14c17YM+fpcyIG+cW3jeA7iEMgicukXRv+YuH/GQac9Hc+y
KGQj64GY17S49u5YVwND76Hz0HfUXzwTcwJG/lr0zyycT8OaGRX9vKPR8SzI
bfQMOXnoJuTNm3H/TxfOPap5j4lxdvYF8ml+rAH2Kfk36Cby4sC0wX/nFI5N
MrfkgZPjTh4O9hH+M3YRdiK5dz2CxiabE/cDHoTuYy1gh7H+yX/+O3NuORge
2AS4xL1h/2APMT5+MjYYce/PMscfryicb4evD+4CRoOvCcaETmU/YqNhX14U
NPgUNhu5kUfkrpHBdsOGw6auFb+F7QYeAO6A3dchngVbG7sbGxf7dr24Z2wZ
MB6wHvwDcEbwKXw9/DkwEXxkfD7wRHxDbGRsbmxw+vEV8QfxG/Af8CfACmvy
6avOG/8rc77968jJ0vlSm2TOFyNeR23LJ5lrMDtkjivjx31bOGeb+DAYDz4J
Psge4tkgda4yMXli1VMr9oGoq8Q3IbecnA+wC+qwyBVET4EDET/A5zos7hl/
p13M54wYB8wIHvww/El8MXwdMCxsrWmF7XDqXfD/wJvwK+HHV8ePox9Mqmdc
C2aKr3R0zDn+O/eDf8uY3A/+Lc94ZMzzncEPFtY+5oGYx9i4lvvE58PWw+bD
VwPDAx/E/ybXjzxM7Gry7jfJnTP/fOF8QuQ0NXTUsGE3ktfdIHc9ILncDXPX
n5L7fWDuWMyDhXMdsQXI222TO8eMGjjy4amBGls4twnMgLwnaqbIde9Wuubo
isz4KjFy1io54QflrlElD//Q3HWI5M83zV1r1glsOXXNIDYLtsvsmDfWBmtv
fOEav5Xxjog947fVL53n3z5zvjp5/+R1PFY45xNdSn56o9yxSOoWm+WO7eKr
4bOxj8BLwFDAe17ScZfCvi9YF7jqDhXn6JKPy5qkPveYyHlg/Ma5c+DBjfDt
8euJDyAHwGnBVMjRBxshJoGfg72RxVoCt6jE3gQPODjWJ/gB+Ao4C/dG/mu7
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
DU4I3kj8//8AhbzBlg==
          "]], Polygon3DBox[CompressedData["
1:eJw1mwn8F9P3xufOzJ0PQighWrXJvqQsESkplAgplFD9qCgqlaVIREnRYmkl
S/Z9DdnKvhPJkqUQhYTI/3l/n/m/Xt3X9z5zZubz+czce85znnNqcMagrgPT
JEmOypIk19+jY5Ks1PxEjbnC/+jgQRVNhFvqz4nCh2o+VvMjQ5L0Ez5JeJ7w
qcJ/Ch+o8//RTffRsX+FDxYOOqeV8HG6/0+an6qxQLiG8OOaN9ToJdygSJIr
dM0o4feEDxS+V+N83a+R7t9W5y/P/H0ny36Q/h7Nd5TtSY0dNP9J59blu2s8
Ins9Pk/zhrJ3ln0/4eHChwjX17376/uN1LF3dOwA3f8DzQ/WGCN8nnBf2S8S
fkt4kPDZwsOF3xQ+X7if8Ajht4Uf1t86Gj00r6f7Pyf7FfqM6Zr/p2OHC5+g
8zvonOuFHxJ+Qvb1mv+kcbK+XxvZxvFOdM0xwvsKDxU+WPh/wicL3y58uvAJ
uv5k3a+Xjt3PO9HfbjqnPZ+t0VDzP/U8dpetIny87Kfp2HGav6xxhj57msaB
Omd/4Yru1UOjr857QtcMkO0OjdNlHyP7X7q2nuybyX647L8J1xFOy/c7Q7iu
RqZzZ2vM0fGo0Vq2Tfn++r59dP4FOrZYxzro3jdptNf9pwvP1fGKxqGab16u
p7o6f1MdO0zHTtP1pwr3F36KZyD8h+b/03haOBG+WvdrpPsdJLhAx2toHKv5
drpfIXt9XV9Lx45jPQufInyG8IOsYeGewv2EnxTuJtxduLfwA8K9de8bNfZn
fet+W7M29R37yP4Q20TnX6NjTVP/hkK2qPGd5t9rXKn5WI0rdO04jS10/gSd
31znd2Q9aT5QnzdR50yR/WTZZ+nYCbI/LHt74a/1WV00buaZ8t01hgi/Kvyg
7OfwfnT9D8JdhE8S7in73cKdhE8U7iY8R7i+zluve+/Ko9PnnavPmqdxqo4N
F/5V9lY6/3fhZjrnGV23C89b8+aybyX7j7KtFV6j8axsu2qcq/nusv8mWy2d
85fwjcId9fnddL8TdM5s/I0+62aNo1L7kF6aX6+xL98peH0doPPXCe8i+0zh
phpbyjZf4xzd70zZL9T9lsh+rPCtuv44nX+n8OU6d4zGaJ17uUZvzY/WuVNl
O0G4ts7tresH6dgLOtZH1/cSHij8vPC5wmcJDxV+TXiert9LYwddew/7R/bT
ZR8g+3OsR9k6aX6D5l35PNlPk/1cHVuoY3fr79b4LM1r4hPwJ/oOa4L3QB/N
Z2i01ry1jn0g+0W6/n5dU134FeGhFb833tfLwhcKz8d/C78jPKzifcT+2aOw
/9lJ99tTnzlS86tkf0zXvyj7Hzp/jHBH/Lbw38JjhY8Xblf60+s1pmleJ/H9
zpd9cm6ftonwBOGf9Xk98cG6fpBwTfyOzr9Q9sHCU4RnyL6b8OUaO5Rr7gF8
kcYI1pbszWQbo1FL9vo6Nlu2FhrdNb9L9m6yjdaoIfvPOnaV5iN1/5t0zlz8
ofClGtvIvkL2a8Gyz5L9Tn6v/o7TsQay7yX7fpqP1agnfKDw1/r+l+j8J/R7
arO+ZZskvF64b/BzeUhjYfDzeRX/oXNWBN8D/zNK59+sc+bpWC3Nv9N8W5mm
6B6Psf90/pfBv3Fb2b+VvabskzPHg10L75UJsteQ/XF8nOyTMseTk2X/Ovid
Ps3+Fv4q+Jm+qPlLGhOFt8Pn6fpVrFfNp+r67YV/EK4tPI3YWNh/XKpjI4N9
OXuOvTZb9prC3wjXEL5eeEfetfDOwjcL7yT8i3Aj4Vvwyfo++7Cnda/rUq/3
W2S/jViW2Jfj0+EGt/GMhVcLNxS+KXO8mqpxK2slsa/GZxNr7svsb65lTcq+
ZeL1MkDnTNCxycGxiRi1r2y3Z44/04RnynYI8ZF4o3O669iNwo/q7ykaV2u+
SOf01PxxjZc076Jxlea5Bq/2auKj5l8JXKP5Sh1roftN1f12zh1v5pfxcr3s
7wqvY+/I3ij3/oNkjdF3ukz2wRobNL9Y4yLNhwXv8+007gje7zPxh7p+ka57
T/gh4Yc1PtL8dTiOzr2EewS/v+p6VjN0/v65nzd+oRrPIdg/pLJPl3333M9j
ahn/fwreg7uz9mSvnfv5s4+v07gheD/znLfR2Drx82ad75Y7drHet9R8lZ7P
dZqv1rGmut8Nut/Wuf0HfmPH3Hsb/0GcGq8xIThe3VDG11VwS+HGml+j7/91
6jX9os69QGORbO8H+51zNN4N9j+n4P+JBzrnscT7eGeNe4P38906fqTGMN69
8GH4Bfa05nsG881Wuf08/v0FXbunxsOaN9a4neeW+7vdLzwkmq++ofG58KG6
/rXMvBQ+il+9V+OJYP96Semflgc/wwWyddA4R/PH2CPsHWI6e0bHnoJb5OZG
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

          "]], Polygon3DBox[CompressedData["
1:eJwt1gfYzlUYx/G/93l5jQqZReEyGkZWlFRcGUVFSONqUVqKFpU0REJGhURl
NKiLNFUaGiJZkVUZ2S/Ze2T0ufu/1/X+3uf8vuc+//P8z7nPfZ5Knbu365aV
JMlAyk+z/RtCjbQzmSSplJ0kbQskSVHqpv0jLcqXJJ+JeY7OFrfdA4rjzcVs
oSXGtaTvxTXgF4urpn80jceO8e/Ra8ZeLe4mvLq4+TSC3+d5I8XV5RfRW9hJ
7A2sDv+TsWcZM4LGYBdh67AL+LE0EZvDD6XG5sg2vjJ+rbj81EX7W5or7lsx
A6imuMPmOBNfS09hg43bgBXWdwQbhr2LHcfqYTv5HXSpvvL4zVg1PjsnSZrF
elAPrDo2nGaLuQp7EKvPj6XfsHZYb6wGP4J+wWpQN6wmP5Lm8DWpO1Yr1o5+
5WvRQ1hLfgpt4K+jN7Hi/CrvO42vSLdhl2ET6U++GQ3GmvDv00q+BQ3FmvEf
0N98Kxoe+eG96uZP3+maWE+6kv+QNsZ70Fv6qvKbzfszX5cew8rz5ai3MQ9h
M7EK4tZj3+e9W7zvQawZNsPefCq2NR3GcrGFYprSAHEnsK3YCv4aGoVdjk2i
v/jmNAQ7m18Xz8tb01j7Mtha7Bu+GnXBqmCbsJl8HXoUqxjrif2Qt86x9pXj
XSMH+dr0CFYKW4NN56vQnVjpWDvsa74q3YUV46+L8+Ddusa+ebdLxL1Dy/nL
qJ+4C/lxtIi/iJ7GVsX+RK7FPsR6GfsRP9fz+vN/yMli+lbiPfEXsfza/pIc
+3ZL5JX2PrxnnOHIPaqN/WtsVWxePI9qRb5jVbCH+cLG99F+ntbo24ptoasj
xzyvAX7c91jv8xTsNJ9F6U4xBY3tFeeJfouaIm5ynH/tG43tjBcSc1+sAXYM
exY7IW6bz3KxXz7L0kbqI+5lMSW0S0SfuNKR49pd8B54IzFv0zL+UuqrryE/
gX7nG8UcWAN+PC3mL6ZnsDr8aJqflweRu5HzY2hBXj5H/tfmX6d5eXkQ+VIg
J93P2MOOvscNdNJ3y8baYJMjj7B8OenZjPP4OdYQy+SkuRr5+R3WBCtsbCGa
iN2EPYAViSId51C7XszBlsWyYm6+Md2NHfX5cqyzcSfsZX2soGe1oXny73b8
HjGni1mNfRG1nm4X1x7bhe2KOek7rA22M/aEv5e+wjZFTuCv8KvMUTLm5VvF
2TfHl/o7UFNsG7ZaXAcaJ64DthvbHWeSZmDXY3uwPVEL4v7A9hr/OzaOzxdr
hV0lbju2mb+DpmKHxC3B3uELxvolac7vxfbHPmbS/F8j7kl8EP931v9LmbSK
Oi4uF+tEH2GbxfXFX+XXiCuF5WL9opZja7HS2D/YC1GPsc1xfyRp3vbHRmFb
stIc3okNjDzCdmOVsVl8vQLpvRb3WwUx+2lw5KW4g9j5cfaxx+OewlZmpff0
LmyQxhvYnjir2PLIeTovO7274w5fyjc0xwRzFMHO1bebXsLf5PfG2Y+Uin2k
qVhhugL7K+4Jqp6d3qFxl+ZGbaf6WDGsNdYuxsUaxh1DU7DV+p/ABvKrzeEr
JHuwxRpjM1EInD8f94s5jJ3gn6MVSVoLDmHH45xm0rrQFTuCneT7RL3D1mMX
Y5O8W5k4r54/Lc4kNozfEWsa9ZkvSY/qvwv/HPtE3Pnxe8PYYXGu4rxFjcU+
FXMmdRT3Q9RJbHQmrZNRL7eIXYCNxPZj52AzxC3EXs+ktTNqaKG4i7BPsDPo
eqwzdhA7yveihdgd2H7sMP8EzU/SmrECm8KXzKT1Y138TsCH8JvMUSRJa+7T
2FAsNyutvwVj34z9GCsbZw7rjv2LZUUOx3mNuq+9NNaPPyXuTGx63AkF0t9V
8fuqVNzX2DEsE7ke+xl3EPYH9iFfitpinbAD2BH+SVqAdcOOYvniPEX+Yrdi
+7ADUUtpDnZc/3LsA/40ahl3AbYMe58/lVpgrfl/aBXfnmb5nv8BbwRoqQ==

          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{731, 904, 1804, 732, 913, 1812, 752, 922, 1818, 764, 1850, 
       931, 776, 1855, 940, 788, 1862, 949, 800, 1869, 958, 812, 967, 1826, 
       824, 976, 1834, 836, 985, 1840, 848, 994, 860, 1879, 1003, 872, 1884, 
       1012, 884, 1891, 1021, 895}], 
      Line3DBox[{733, 905, 1805, 734, 914, 1813, 753, 923, 1819, 765, 932, 
       1822, 777, 1856, 941, 789, 1863, 950, 801, 1870, 959, 813, 968, 1827, 
       825, 977, 1835, 837, 986, 1841, 849, 995, 1844, 861, 1004, 873, 1885, 
       1013, 885, 1892, 1022, 896}], 
      Line3DBox[{735, 906, 1806, 736, 915, 1814, 754, 924, 1820, 766, 933, 
       1823, 778, 942, 1824, 790, 951, 802, 1871, 960, 814, 969, 1828, 826, 
       978, 1836, 838, 987, 1842, 850, 996, 1845, 862, 1005, 1846, 874, 1014, 
       886, 1893, 1023, 897}], 
      Line3DBox[{737, 1031, 1032, 1162, 1034, 1899, 1035, 1167, 1044, 1903, 
       1045, 1172, 1053, 1908, 1054, 1177, 1062, 1912, 1063, 1182, 1071, 1917,
        1072, 1187, 1080, 1081, 1192, 1089, 1090, 1197, 1098, 1922, 1099, 
       1202, 1107, 1925, 1108, 1207, 1116, 1929, 1117, 1212, 1125, 1932, 1126,
        1217, 1134, 1935, 1135, 1222, 1143, 1144, 1152}], 
      Line3DBox[{8, 689, 396, 727, 1737, 23, 692, 247, 1464, 712, 38, 693, 
       258, 1473, 713, 53, 694, 1733, 269, 714, 68, 695, 1734, 280, 715, 83, 
       696, 291, 716, 98, 1314, 697, 302, 717, 113, 698, 313, 718, 1736, 128, 
       699, 324, 719, 143, 700, 335, 1537, 720, 158, 701, 346, 721, 173, 702, 
       1735, 357, 722, 188, 703, 368, 723, 203, 1389, 706, 382, 725, 218}], 
      Line3DBox[{739, 908, 1807, 740, 1847, 917, 756, 1848, 926, 768, 1851, 
       935, 780, 1857, 944, 792, 1864, 953, 804, 1872, 962, 816, 971, 1829, 
       828, 980, 840, 1876, 989, 852, 1877, 998, 864, 1880, 1007, 876, 1886, 
       1016, 888, 1894, 1025, 899}], 
      Line3DBox[{741, 909, 1808, 742, 918, 1815, 757, 1849, 927, 769, 1852, 
       936, 781, 1858, 945, 793, 1865, 954, 805, 1873, 963, 817, 972, 1830, 
       829, 981, 1837, 841, 990, 853, 1878, 999, 865, 1881, 1008, 877, 1887, 
       1017, 889, 1895, 1026, 900}], 
      Line3DBox[{743, 910, 1809, 744, 919, 1816, 758, 928, 1821, 770, 1853, 
       937, 782, 1859, 946, 794, 1866, 955, 806, 1874, 964, 818, 973, 1831, 
       830, 982, 1838, 842, 991, 1843, 854, 1000, 866, 1882, 1009, 878, 1888, 
       1018, 890, 1896, 1027, 901}], 
      Line3DBox[{745, 1038, 1039, 1810, 746, 1047, 1048, 1817, 759, 1056, 
       1910, 1057, 771, 1065, 1914, 1066, 783, 1860, 1074, 1075, 795, 1867, 
       1083, 1084, 807, 1875, 1092, 1093, 819, 1101, 1102, 1832, 831, 1110, 
       1111, 1839, 843, 1119, 1120, 855, 1128, 1934, 1129, 867, 1137, 1138, 
       879, 1889, 1146, 1147, 891, 1897, 1153, 1154, 1155}], 
      Line3DBox[{690, 613, 1163, 531, 1954, 1229, 535, 1168, 1955, 537, 1230, 
       541, 1173, 1956, 543, 1231, 547, 1915, 1178, 549, 1232, 553, 1919, 
       1183, 555, 1233, 559, 1188, 561, 1234, 1951, 565, 1193, 567, 1235, 571,
        1198, 573, 1960, 1236, 577, 1203, 579, 1237, 583, 1208, 1961, 585, 
       1238, 589, 1213, 591, 1239, 595, 1937, 1218, 597, 1240, 601, 1223, 603,
        1241, 1953, 606, 1227, 681, 726}], 
      Line3DBox[{747, 1040, 1164, 1940, 1041, 748, 1049, 1169, 1941, 1050, 
       760, 1058, 1174, 1942, 1059, 772, 1067, 1916, 1179, 1068, 784, 1076, 
       1920, 1184, 1077, 796, 1085, 1921, 1189, 1086, 808, 1094, 1194, 1095, 
       820, 1103, 1199, 1104, 832, 1112, 1204, 1946, 1113, 844, 1121, 1209, 
       1947, 1122, 856, 1130, 1214, 1131, 868, 1139, 1938, 1219, 1140, 880, 
       1148, 1939, 1224, 1149, 892, 1156, 1228, 1157, 1158}], 
      Line3DBox[{893, 1019, 1225, 1150, 881, 1010, 1220, 1949, 1141, 869, 
       1001, 1215, 1948, 1132, 857, 992, 1210, 1123, 845, 983, 1927, 1205, 
       1114, 833, 974, 1924, 1200, 1105, 821, 965, 1195, 1096, 809, 956, 1190,
        1087, 797, 947, 1185, 1945, 1078, 785, 938, 1180, 1944, 1069, 773, 
       929, 1175, 1943, 1060, 761, 920, 1905, 1170, 1051, 749, 911, 1901, 
       1165, 1042, 728, 902, 1898, 1160, 1028, 1159}], 
      Line3DBox[{705, 640, 1226, 605, 1963, 882, 528, 1221, 599, 870, 526, 
       1216, 1962, 593, 858, 524, 1211, 587, 846, 522, 1928, 1206, 581, 834, 
       520, 1201, 575, 822, 1952, 518, 1196, 569, 810, 516, 1191, 563, 1959, 
       798, 514, 1186, 557, 786, 512, 1181, 1958, 551, 774, 510, 1176, 1957, 
       545, 762, 508, 1906, 1171, 539, 750, 506, 1902, 1166, 533, 729, 1950, 
       504, 1161, 647, 710}], 
      Line3DBox[{894, 1020, 1151, 1890, 883, 1011, 1142, 1883, 871, 1002, 
       1133, 859, 993, 1931, 1124, 847, 984, 1115, 835, 1833, 975, 1106, 823, 
       1825, 966, 1097, 811, 957, 1088, 1868, 799, 948, 1079, 1861, 787, 939, 
       1070, 1854, 775, 930, 1911, 1061, 763, 921, 1907, 1052, 751, 1811, 912,
        1043, 730, 1803, 903, 1029, 1030}], 
      Line3DBox[{898, 1024, 1145, 887, 1015, 1936, 1136, 875, 1006, 1933, 
       1127, 863, 997, 1930, 1118, 851, 988, 1926, 1109, 839, 979, 1923, 1100,
        827, 970, 1091, 815, 961, 1082, 803, 952, 1918, 1073, 791, 943, 1913, 
       1064, 779, 934, 1909, 1055, 767, 925, 1904, 1046, 755, 916, 1900, 1037,
        738, 907, 1033, 1036}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1242, 1455, 1738, 1898, 1570, 1662, 1663, 1620, 1646, 1950, 
       1397, 1571, 1456, 1803, 1398, 1243, 1804, 1399, 1244, 1805, 1400, 1245,
        1806, 1401, 1246, 1032, 1572, 1730, 1402, 1737, 1731, 1732, 1573, 907,
        1247, 1807, 1403, 1248, 1808, 1404, 1249, 1809, 1405, 1250, 1789, 
       1810, 1406, 1574, 1664, 1954, 1665, 1621, 1647, 1407, 1575, 1940, 1459,
        1408, 1460}], 
      Line3DBox[{1251, 1461, 1739, 1901, 1576, 1666, 1462, 1622, 1648, 1902, 
       1649, 1577, 1463, 1811, 1409, 1252, 1812, 1410, 1253, 1813, 1411, 1254,
        1814, 1412, 1255, 1899, 1457, 1578, 1718, 1719, 1464, 1720, 1458, 
       1579, 1740, 1900, 1256, 1741, 1847, 1257, 1815, 1413, 1258, 1816, 1414,
        1259, 1790, 1817, 1415, 1580, 1667, 1955, 1467, 1623, 1650, 1651, 
       1581, 1941, 1468, 1416, 1469}], 
      Line3DBox[{1260, 1470, 1742, 1905, 1582, 1668, 1471, 1624, 1652, 1906, 
       1653, 1583, 1472, 1743, 1907, 1261, 1818, 1417, 1262, 1819, 1418, 1263,
        1820, 1419, 1264, 1903, 1465, 1584, 1721, 1722, 1473, 1723, 1466, 
       1586, 1744, 1904, 1265, 1745, 1848, 1266, 1746, 1849, 1267, 1821, 1420,
        1268, 1910, 1478, 1421, 1588, 1669, 1956, 1479, 1626, 1654, 1655, 
       1589, 1942, 1480, 1422, 1481}], 
      Line3DBox[{1281, 1498, 1497, 1916, 1280, 1673, 1496, 1627, 1495, 1915, 
       1672, 1279, 1494, 1493, 1914, 1278, 1853, 1750, 1277, 1852, 1749, 1276,
        1851, 1748, 1275, 1909, 1477, 1587, 1476, 1705, 1733, 1704, 1475, 
       1585, 1474, 1908, 1274, 1424, 1823, 1273, 1423, 1822, 1272, 1850, 1747,
        1271, 1911, 1488, 1487, 1270, 1671, 1957, 1485, 1625, 1484, 1670, 
       1269, 1943, 1483, 1482, 1486}], 
      Line3DBox[{1294, 1511, 1510, 1920, 1293, 1677, 1509, 1629, 1508, 1919, 
       1676, 1292, 1507, 1860, 1792, 1291, 1859, 1755, 1290, 1858, 1754, 1289,
        1857, 1753, 1288, 1913, 1492, 1591, 1491, 1707, 1734, 1706, 1490, 
       1590, 1489, 1912, 1287, 1425, 1824, 1286, 1856, 1752, 1285, 1855, 1751,
        1284, 1791, 1854, 1504, 1283, 1675, 1958, 1502, 1628, 1501, 1674, 
       1282, 1944, 1500, 1499, 1503}], 
      Line3DBox[{1307, 1518, 1517, 1921, 1306, 560, 1631, 559, 1305, 1516, 
       1867, 1794, 1304, 1866, 1760, 1303, 1865, 1759, 1302, 1864, 1758, 1301,
        1918, 1506, 1593, 624, 696, 623, 1592, 1505, 1917, 1300, 951, 1299, 
       1863, 1757, 1298, 1862, 1756, 1297, 1793, 1861, 1515, 1296, 557, 1630, 
       556, 1295, 1945, 1513, 1512, 1514}], 
      Line3DBox[{106, 809, 107, 490, 810, 108, 811, 109, 812, 110, 813, 111, 
       814, 112, 1192, 434, 113, 435, 815, 114, 816, 115, 817, 116, 818, 117, 
       819, 118, 1235, 491, 119, 820, 120}], 
      Line3DBox[{1321, 1523, 1094, 1320, 1684, 1685, 1633, 1683, 1951, 1682, 
       1319, 1522, 1875, 1796, 1318, 1874, 1766, 1317, 1873, 1765, 1316, 1872,
        1764, 1315, 1082, 1595, 1711, 1710, 1314, 1708, 1709, 1594, 1080, 
       1313, 1871, 1763, 1312, 1870, 1762, 1311, 1869, 1761, 1310, 1795, 1868,
        1521, 1309, 1680, 1959, 1681, 1632, 1679, 1678, 1308, 1087, 1519, 
       1520}], Line3DBox[{1322, 1524, 965, 1596, 1686, 1687, 1634, 1656, 1952,
        1426, 1597, 1525, 1825, 1427, 1323, 1826, 1428, 1324, 1827, 1429, 
       1325, 1828, 1430, 1326, 1090, 1598, 1724, 1431, 1736, 1725, 1726, 1599,
        970, 1327, 1829, 1432, 1328, 1830, 1433, 1329, 1831, 1434, 1330, 1797,
        1832, 1435, 1600, 1688, 1960, 1689, 1635, 1657, 1436, 1601, 1104, 
       1437, 1527}], 
      Line3DBox[{1331, 1528, 1767, 1924, 1602, 576, 1636, 520, 1603, 1529, 
       1833, 1438, 1332, 1834, 1439, 1333, 1835, 1440, 1334, 1836, 1441, 1335,
        1922, 1526, 1604, 666, 719, 667, 1605, 1768, 1923, 1336, 980, 1337, 
       1837, 1442, 1338, 1838, 1443, 1339, 1798, 1839, 1444, 1606, 579, 1637, 
       521, 1607, 1946, 1532, 1445, 1533}], 
      Line3DBox[{1340, 1534, 1769, 1927, 1608, 1690, 1535, 1638, 1658, 1928, 
       1659, 1609, 1536, 984, 1341, 1840, 1446, 1342, 1841, 1447, 1343, 1842, 
       1448, 1344, 1925, 1530, 1610, 1727, 1728, 1537, 1729, 1531, 1611, 1770,
        1926, 1345, 1771, 1876, 1346, 990, 1347, 1843, 1449, 1348, 1120, 1450,
        1612, 1691, 1961, 1538, 1639, 1660, 1661, 1613, 1947, 1539, 1451, 
       1540}], Line3DBox[{344, 342, 1210, 456, 343, 1211, 457, 345, 1931, 
       1349, 994, 1350, 1844, 1452, 1351, 1845, 1453, 1352, 1929, 336, 346, 
       337, 1930, 1353, 1772, 1877, 1354, 1773, 1878, 1355, 1000, 1356, 1934, 
       349, 460, 1213, 350, 461, 1214, 351, 352}], 
      Line3DBox[{1369, 1557, 1556, 1938, 1368, 1695, 1555, 1641, 1554, 1937, 
       1694, 1367, 1553, 1137, 1366, 1882, 1777, 1365, 1881, 1776, 1364, 1880,
        1775, 1363, 1933, 1544, 1615, 1543, 1713, 1735, 1712, 1542, 1614, 
       1541, 1932, 1362, 1454, 1846, 1361, 1004, 1360, 1879, 1774, 1359, 1133,
        1550, 1358, 1693, 1962, 1548, 1640, 1547, 1692, 1357, 1948, 1546, 
       1545, 1549}], 
      Line3DBox[{1382, 1564, 1563, 1939, 1381, 602, 1643, 601, 1380, 1562, 
       1889, 1800, 1379, 1888, 1782, 1378, 1887, 1781, 1377, 1886, 1780, 1376,
        1936, 1552, 1617, 638, 703, 637, 1616, 1551, 1935, 1375, 1014, 1374, 
       1885, 1779, 1373, 1884, 1778, 1372, 1799, 1883, 1561, 1371, 599, 1642, 
       598, 1370, 1949, 1559, 1558, 1560}], 
      Line3DBox[{1396, 1569, 1156, 1395, 1702, 1703, 1645, 1701, 1953, 1700, 
       1394, 1568, 1897, 1802, 1393, 1896, 1788, 1392, 1895, 1787, 1391, 1894,
        1786, 1390, 1145, 1619, 1717, 1716, 1389, 1714, 1715, 1618, 1143, 
       1388, 1893, 1785, 1387, 1892, 1784, 1386, 1891, 1783, 1385, 1801, 1890,
        1567, 1384, 1698, 1963, 1699, 1644, 1697, 1696, 1383, 1150, 1565, 
       1566}]}}},
   VertexNormals->CompressedData["
1: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
3fU+3NK5jDqc37voemM/ior//OnUdCe1WVU2SHy8iEq85Uny+qGypyHy9FPq
87nMydOXCqiDbbNJXlqlWevb9D5Q7zz3/VLwbqbWqzaTvFQ4my+wqbVQRkW+
l/YUN1KW1R4kL/dj2z6XxLRSThLrkg/tfkuNBTwkeT2S0Zwa2NhO3dlyUbRz
1huKZ8sDklfj8sKU7r/vqIRrftPDzS2UJk8LyUvX46hMkuZ7yvXMtZEnm99T
e/Z6kbyWV3fy31zzgfrDo6/TbNNMHX6xVQzyOtC7u5t9Zwtls3rJKp5njdTx
SFeSV/qHVWWKqxMoexNKpsq6lOraKLoH8lq4UqPahK2W2sX/4xa/TicleC6Y
5JW+SqB175Y6yvCu2rIkpw5KIdeQ5FVf/cgyZ7ye2kDJo9q8dsrnwDKS11Pt
3cNlI6+pOUHvvw9ua6fCZsaTvHzjcoVutJRTs0Xt2sJGu6jY8EKSl1HlsRiv
h1VUa9T9dbLvOqlVR+JJXlkvS8+0ttdQjW3n/0Rv6qSqxD6R87outTamZlcd
NdH0+6esQwf1XYCuw1z3Jy6d9yPR8KWYF6nvS6mFyUfJeWVHnnC7GB6D7EZk
wj7d6aKi5fonIa+Hy/2jbQTXoSuZoz0Dx7qontdnSF5/v49dWXo8hqq+HDCU
79tF+VobkrweeJ0M5L+XQfFsqNjpgO/BEyWKzkv+grF5eR7arLUu08LtI/Xk
cQ3JKxCx/xW5l4E+OshwgH9eyB6SV+/fT1cVj8cg60u6+RA/IHkFOa/fpg+V
uOauo4RVuZ4BHokddF6PXgn6ci3NQWZcisHX5CmqK3wFOa+smOiPg3wN6HWS
iWFZRzulxB9CzquWT6/3xa46JKY9UQH8SN5aRvK6WNFd3d5eg6g6sSHgUy1l
N8krp3Hd9OmHVeir15X1wP+W9XQdvhjbyM11oxGNm35sfBDUTh2dO0zyMr9W
lFY+8hptWu7KBuc76nKc5HXvspN07ng9aqu7eLAG18OXmUokL73d+f77ttSh
gszTFom4ftjCfUheZ76F3nQuKEaSb7reBZ/PoqSOHNWHvGad0+urLmtFKaeN
C/Uc31IJbDEkL8u6x80cO1uQ+8rnF2fjer6vvZLkJZz/df6tNR/QnpTlBU24
/r/4ziJ5pegfUE7WfI8Wp8adhPuy0Cqc5JX0c4e8inkn2umg3Hxk1WvKyqCX
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
o/sy8ToLmR95S/J8rqvFd1hnWYq/ugH8Q822kTx/Y373adDnSGX4CdAnTe4d
yfNv3xR0wDqrJXXxc9Bf4yYLh68NiiRhvjKp/VtgvhckzhAcJp22NAb7aD54
lQ39aVmMRRfgsP5n3R7ow6rO796K15vI5PmlWb04vkRDrga0GbRSUlve77fh
olP7TB/GFmUxKS2GdsZh/VbqSpZ69tKZdOq4yTnp8zj/JGpeqdHXa6U8XjWo
P+KlUzs8dBWlbjGpXW6yw4FHcX8Zq8Ls30OnDHJTW99qMqmlD4/7jHa3UjkG
x/2kVCupFd0qYzFsTZSBVILJx1QmpVtXEufT+IF6r73MqOkCE6WYXxgtCWml
Pr255fzWjE4lKrSfewr7aaLm1/hx/9qh2+X/mY9OFSbGmfu9xOt383XqhzVb
KdHDb5MOj9KoyA+idbrYPv5WkXkS21spNSsvuiDuHw5zmbfdxH2+qEq1rNKz
IsrgQaveDYt06pKa0o3QVXXUfuFB63v3+ynVPBH/Sz0N1PyOeLG+p0zqp77y
p8/9eJ34qNGZc4BBzdaf2O9RyqQ8hWRH5xQzKLmYlivDtQyK2zmgxgavmya/
CYRIf2dQ0n/67m6a00AFBpRpvrZiUo4BX48eutpA7Xb+3PSksIHiKJN3f57P
RHIhdbHSzTg/rFV3r25jUHqrqmNc6Uy0vWO5l3UugxKwK35ZVsSg+PcdZva/
YKLHcx89pnUxqD8vTj9RxL9BQgPuy7o6qYrlF0b3G7ZQsRnGlxcEtFMKvuzy
b2uYlCnTZaltKo16P/Yp7fHyVmoX34Yn33Geqbe4phP7gUYphr0+sVG7lboQ
M6f4szuT2uTdcCfAmE6V3eyvrEptpcbML/6k1zHRVKrbSZRFo0T41lWxibZS
w7znJn4/YaKPyk2Dun9o1Kfsmavf6bZS5xX4m2+XDVBOV3+tMF9XSG0s6OfL
pjdSS4JfP24sYlKRfmH5NJv1SOyIJ+/KS23UcMSt+llBTMp244zQDf7WSHmo
TPV0fxvluOCPusZFJsX3xk+8yZeOuJSNCvp8W6msJ8+5ALeBuU45GLcoRKMn
ypqLji6mT9wF3Aa9Qm0Yt6gu8Eij8Ew6mqd5iOA2M7yJ3UCvFf3sNrJJ5aWj
kMBBBcDtEc6Hy88ebUV+1+/wM/fQ0e4/NIJbo4AHjzFuUbKd4J0VqpVoPMlr
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"s\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SqrtBox[SubscriptBox[\\(\[Beta]\\), \\(x\\)]]\\)\"", 
     TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SqrtBox[SubscriptBox[\\(\[Beta]\\), \\(y\\)]]\\)\"", 
     TraditionalForm]},
  BoxRatios->{3, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->Medium,
  Method->{},
  PlotLabel->FormBox["\"Beam size evolution\"", TraditionalForm],
  PlotRange->{{0., 10.098999278642857`}, {-6.605584972441592, 
   6.605584972440926}, {-6.6055849724414255`, 6.6055849724414255`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682339904578404*^9, 3.682339923399783*^9}, 
   3.683265691949531*^9, 3.684065910376811*^9, 3.684080069194552*^9, {
   3.684080125805758*^9, 3.684080153389461*^9}, 3.684080312613277*^9, 
   3.684080354220458*^9, {3.684080423432478*^9, 3.6840805046144657`*^9}, 
   3.684081178430624*^9, 3.6840826996377697`*^9, 3.684082829645952*^9, {
   3.684083361270152*^9, 3.684083373915169*^9}, 3.684083630423386*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
oPnZxGjO/wF+KfUq
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF13k8Vc/7AHCELNmufb/3ulIkRLbkPHb3oBQpUiRStEgRJdlDipBUkiRR
tiT7cpQtIUUqCSH7niTCd7xev98n/9zX+/XMM/OcMWdmDsXpzF4XJgYGhk3r
GBjWfskgUZKUeU2X4f/+9hXKnGRxPIH9vyUMR0VaHHz/M8M1izP5DhH/2XPr
lbtpDnf+swKDSN59h8z/vP7EgPZdh5L/7HUfD0h0ePOfS6zHLtV7dP5n/6oi
JY20/v9cfdQwyKXin5nZ3rfHdfxzpOWo7zTbwH9O+C5Rk3nqn7PXBR2Q0Pjx
n7tMzAMZGwf/s/T45zal/n92inHZePjvPw9/9n9bunXoP8+deC54Pu6fOaOE
ng7aD/9n7dbeD2+nRv5z0W7pUAnO0f+s9u6QxqmN/7y1pfMe96F/pja1O+9p
/GeOhob5jrSx/3zVZH2mHPHPzPVGB32+/vNK7asqUdL4f559XR5uf+Wfv1bl
ifXZTvznA9hU0zavf+6oVLwSHPPPrRVP+2n1/1xTlpblqjb5n/V29B8u3v3P
laUUPnb3fy4uSfZ6+vCfs4oSdSe4p/7zZo1P0zvl/zm9UPDRDaN/TnkZu17Z
758lt78vCbj9z3cLeE6+z/9nYbVdUtSWf45/EdXqOfLP4Xdcqo8wTWPnmn3n
W7omqky+hIhx8E5jhj2uUrs1RAlW0bRz+ZLT2FmNZO4tJ+SImgOvm+wUprHC
ZcmfPFQVIiixT3ad1jRGnUzwotxSJ/Q+M155ZjyNAfd5csYGHaJyP6j8PTKN
5VvwKugFGRAP961XLzs9jT1YTQZbkjERYtWiffHSNMbpeGzQLdWUOLbnFqYV
Po1pBVUllC7hBH23veFC/DTW8WfRac1bLGToRQ+nsVAb841r5jYbtfDOmcbm
FjJ7S5BnTJ/v3V42jblpcMSuud3YZ/9c/TRWf+io9pqLDDH7F+3TmGv2sy/F
yHf1WY94fp/GKIe+nFnzZWh2UZmcxtTv9P0tQnbUjXebXkTzEVwRsGYDnYNn
ctfPYDu2OS4VIm/Upp4/LTCD7conTq55bHve5XHFGSyVHKf6ErlF9ULQM+0Z
TH5mOrwAOU9F96qbyQxmsn+g/QWyt2JTzLDjDGaqfNQyH9lWIe7Wk1Mz2A3F
zivPkXU22909dnEG4/pY8TgPmUl2+NFA3AyWW/6wPQf5BzU341HKDJaseP1b
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
bw==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {True, True}, AxesLabel -> {
       FormBox["\"s\"", TraditionalForm], 
       FormBox[
        RowBox[{"{", 
          RowBox[{"\"Wx\"", ",", "\"Ax\"", ",", "\"Bx\""}], "}"}], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {600, 200}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Wx\"", "\"Ax\"", "\"Bx\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.682339904578404*^9, 3.682339923399783*^9}, 
   3.683265691949531*^9, 3.684065910376811*^9, 3.684080069194552*^9, {
   3.684080125805758*^9, 3.684080153389461*^9}, 3.684080312613277*^9, 
   3.684080354220458*^9, {3.684080423432478*^9, 3.6840805046144657`*^9}, 
   3.684081178430624*^9, 3.6840826996377697`*^9, 3.684082829645952*^9, {
   3.684083361270152*^9, 3.684083373915169*^9}, 3.6840836307436113`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1: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
EZI8
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Beta]/\[Beta]*, \[Alpha]\"", TraditionalForm], None}, {
        FormBox["\"\[Delta]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Twiss chromatic dependence\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Beta]/\[Beta]*\"", "\"\[Alpha]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.682339904578404*^9, 3.682339923399783*^9}, 
   3.683265691949531*^9, 3.684065910376811*^9, 3.684080069194552*^9, {
   3.684080125805758*^9, 3.684080153389461*^9}, 3.684080312613277*^9, 
   3.684080354220458*^9, {3.684080423432478*^9, 3.6840805046144657`*^9}, 
   3.684081178430624*^9, 3.6840826996377697`*^9, 3.684082829645952*^9, {
   3.684083361270152*^9, 3.684083373915169*^9}, 3.6840836308102703`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVjHk41HkcgMdvohn3DPP7zSFXmNrSup5nmY35OlJrV7VsznYnCl0qhinl
yTXaYsUgR1oMo+3ASlQaNR8dQkRRGxqs0aEYUinTbm37x/u8f72vVeTegCiM
RCL5f+F/t0Z4FmRJObCvwlkQnMQFfxYjkFnJgUj/Iu84ERdG+l7QT5dzQFTb
Z5ct5MJnfl5+WxkHeks6J6/HcsHLfFTy4QQHhlwvRdhFcqFjKDkvOosD8ik5
850fFwYCr+R4CTmQa7z/d4kZF6bXfH1U48MBjzpJb7vCDqyt16yXjrEhqWLV
hrR5WygI0Rap09mQMTy/kMizhYyOUhs6lw3UoCbaxzQbEDkEyXbfZMFnners
xpalUDPXmhkbzYJGI7eK4k/W8Lj2e9caLRY4z5gnFThbQ1ZlfdzFcia4htae
nN9lBQfUcv3tXkyIv+C5Pv6CJex0eX0gcISAgPFO+fEeCygZ6PN9mkpAjLhV
6RZgDj714jJ/WwIcm882BSrN4G3KlrapNhwcZ8+M/7KWA2Pnn61zisIhV7VP
yrjLgr7eQmk9CYcHOZGU+ZVM8LAn0rTKGTBlGfp+RSEOLya8b2g8GaCi1e2p
NmVAUWHJwFcjplAatl/ZH2cCqeXF67TSTMHpZne95jkN9lRezzE0M4WmKock
cDOG4eGW0LkrJlBbZbg63sIAxHGCX5M3m8Cp6X6V+ycqOHxeecT9Ax34bowz
pQU6wHwueyY7SYfrj65GOwrIkEJ53TPuQQf3oy9uuPNI8NIq6kjwMA2cUx4K
bc4tKCQnMirjD9Mgf6DIJTjmjWK1Vlf2LRYNdunuoB8VTyqiTk/8O3XJGFSR
pHFL+aCiq+bsfXmYMdijZLOEzj8U0Tz76fRpI9A3IA1OtgzwG5ThmiEnIzB9
da/klmaC//6NE2PskCEwHbyPLyfP8H01oQ8Cmg3gXR1eIL/9lm/Q/DCA/o8+
bKMec0vMWeA/EUgT+c76wDCYznla8Ym/VNEW3rJfDzRVs+v/lGmhGEnWhjGF
Lojz/UcHn5NRY2D104QPVPhOf7VNRIgOSuwy5gd5UEE96EC1KKcg5HiPV5NA
gavc9rWVDD1E0XPxkdYvBtsTRQOvxAZoXana+OU7HWA1yW979hqhPGIhpdJe
BzzvX5vYtJyGNvqFNFbHa4P1xQx6ahgdGcwK5gLli+C2jltiSbYJepB5eSDu
LRk2gsDlh1FTZNS39eATHhn0/vp7hsrFET27rLfiGzLw9FJnlStxhPv222x1
IUNw2LD2RSccmbV69U7ak+ExW5KwxQNHy85Y2by3JIPuFk1WxyYceaWO9tAW
k6F4je3UPTGORA7hVmv7MbixTZGrUOEo6VW+SLcPg0M7eHYtkzhKPt11t6cb
A3V6z6KmGRxlmPFEP7VjEP3zbmndRxzlUVh3I1owSPYpym4wIdC5sUcJyRUY
5Aa+bJ/3JlBdmWEX/9SXXpV0TduPQA1BvhbkUgxCW3ey8Y0Eutzd3HksH4O9
2w8bfbuZQLeuFJoXZ2LgNVdlUZRAoDvCbmFYOgZlcSHpDQcJ1LVqUeeSFAxk
turw7lQC9cmEQtkBDH5L9E6m5BCoX3C+IyYRA9PWH+8sKyDQI7ZqyYp4DB6X
KyV+pQQaesgWqvdgwKlijsRWEEiZF9BxYdeXf6xrfX4Ngf4DRSpQmQ==
      "]]}}, {}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-6.907755278982137, -11.73699471955453},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Relative emittance growth, \[CapitalDelta]\[Epsilon]/\[Epsilon]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"Energy spread (rms), \\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \
\\(E\\)]\\)\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-9.210340371976182, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-9.210340371976182, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{{-6.907755278982137, 
        FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.298317366548036, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.418580902748128, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.264430222920869, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.013115794639964, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.809142990314028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.521460917862246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.418580902748128, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.264430222920869, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.013115794639964, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.809142990314028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.521460917862246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->
   FrontEndValueCache[{
    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
     Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 
      6}]& }, {{{-6.907755278982137, 
       Directive[
        AbsoluteThickness[0.1]]}, {-5.298317366548036, 
       Directive[
        AbsoluteThickness[0.1]]}, {-4.605170185988091, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.995732273553991, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.3025850929940455`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-7.600902459542082, 
       Directive[
        AbsoluteThickness[0.1]]}, {-7.418580902748128, 
       Directive[
        AbsoluteThickness[0.1]]}, {-7.264430222920869, 
       Directive[
        AbsoluteThickness[0.1]]}, {-7.1308988302963465`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-7.013115794639964, 
       Directive[
        AbsoluteThickness[0.1]]}, {-6.214608098422191, 
       Directive[
        AbsoluteThickness[0.1]]}, {-5.809142990314028, 
       Directive[
        AbsoluteThickness[0.1]]}, {-5.521460917862246, 
       Directive[
        AbsoluteThickness[0.1]]}, {-5.115995809754082, 
       Directive[
        AbsoluteThickness[0.1]]}, {-4.961845129926823, 
       Directive[
        AbsoluteThickness[0.1]]}, {-4.8283137373023015`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-4.710530701645918, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.912023005428146, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.506557897319982, 
       Directive[
        AbsoluteThickness[0.1]]}, {-3.2188758248682006`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.8134107167600364`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.659260036932778, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.5257286443082556`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.4079456086518722`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.6094379124341003`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-1.2039728043259361`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.916290731874155, 
       Directive[
        AbsoluteThickness[0.1]]}, {-0.6931471805599453, 
       Directive[
        AbsoluteThickness[0.1]]}}, {{-9.210340371976182, 
       Directive[
        AbsoluteThickness[0.1]]}, {-4.605170185988091, 
       Directive[
        AbsoluteThickness[0.1]]}, {0., 
       Directive[
        AbsoluteThickness[0.1]]}, {4.605170185988092, 
       Directive[
        AbsoluteThickness[0.1]]}, {-13.815510557964274`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-11.512925464970229`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-6.907755278982137, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.3025850929940455`, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.302585092994046, 
       Directive[
        AbsoluteThickness[0.1]]}, {6.907755278982137, 
       Directive[
        AbsoluteThickness[0.1]]}, {9.210340371976184, 
       Directive[
        AbsoluteThickness[0.1]]}}}],
  GridLinesStyle->GrayLevel[0.85],
  ImagePadding->All,
  ImageSize->Medium,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Relative emittance growth vs. energy spread\"", TraditionalForm],
  PlotRange->{{-6.907755278982137, -2.3025850929940455`}, {-11.73699471955453,
    5.911692354387379}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.682339904578404*^9, 3.682339923399783*^9}, 
   3.683265691949531*^9, 3.684065910376811*^9, 3.684080069194552*^9, {
   3.684080125805758*^9, 3.684080153389461*^9}, 3.684080312613277*^9, 
   3.684080354220458*^9, {3.684080423432478*^9, 3.6840805046144657`*^9}, 
   3.684081178430624*^9, 3.6840826996377697`*^9, 3.684082829645952*^9, {
   3.684083361270152*^9, 3.684083373915169*^9}, 3.684083631226838*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy spread \"\>", "\[InvisibleSpace]", "0.5`", 
   "\[InvisibleSpace]", "\<\"% rms \[Rule] \[CapitalDelta]\[Epsilon]/\
\[Epsilon] = \"\>", "\[InvisibleSpace]", "0.0055014698990214495`"}],
  SequenceForm[
  "Energy spread ", 0.5, 
   "% rms \[Rule] \[CapitalDelta]\[Epsilon]/\[Epsilon] = ", 
   0.0055014698990214495`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6823399047222557`*^9, 3.682339923674739*^9}, 
   3.683265692429044*^9, 3.684065933604229*^9, 3.684080075013864*^9, 
   3.6840801270823*^9, 3.684080192761832*^9, 3.684080315847972*^9, 
   3.6840803579605494`*^9, {3.684080427983963*^9, 3.684080508470084*^9}, 
   3.684081182095786*^9, 3.684082705774061*^9, 3.684082832747946*^9, {
   3.684083364543004*^9, 3.68408337722186*^9}, 3.6840836313652487`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy spread \"\>", "\[InvisibleSpace]", "1.`", 
   "\[InvisibleSpace]", "\<\"% rms \[Rule] \[CapitalDelta]\[Epsilon]/\
\[Epsilon] = \"\>", "\[InvisibleSpace]", "0.10857647341447052`"}],
  SequenceForm[
  "Energy spread ", 1., 
   "% rms \[Rule] \[CapitalDelta]\[Epsilon]/\[Epsilon] = ", 
   0.10857647341447052`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6823399047222557`*^9, 3.682339923674739*^9}, 
   3.683265692429044*^9, 3.684065933604229*^9, 3.684080075013864*^9, 
   3.6840801270823*^9, 3.684080192761832*^9, 3.684080315847972*^9, 
   3.6840803579605494`*^9, {3.684080427983963*^9, 3.684080508470084*^9}, 
   3.684081182095786*^9, 3.684082705774061*^9, 3.684082832747946*^9, {
   3.684083364543004*^9, 3.68408337722186*^9}, 3.68408363139226*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy spread \"\>", "\[InvisibleSpace]", "2.`", 
   "\[InvisibleSpace]", "\<\"% rms \[Rule] \[CapitalDelta]\[Epsilon]/\
\[Epsilon] = \"\>", "\[InvisibleSpace]", "1.8440570727327619`"}],
  SequenceForm[
  "Energy spread ", 2., 
   "% rms \[Rule] \[CapitalDelta]\[Epsilon]/\[Epsilon] = ", 
   1.8440570727327619`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6823399047222557`*^9, 3.682339923674739*^9}, 
   3.683265692429044*^9, 3.684065933604229*^9, 3.684080075013864*^9, 
   3.6840801270823*^9, 3.684080192761832*^9, 3.684080315847972*^9, 
   3.6840803579605494`*^9, {3.684080427983963*^9, 3.684080508470084*^9}, 
   3.684081182095786*^9, 3.684082705774061*^9, 3.684082832747946*^9, {
   3.684083364543004*^9, 3.68408337722186*^9}, 3.684083631398437*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Energy spread \"\>", "\[InvisibleSpace]", "4.`", 
   "\[InvisibleSpace]", "\<\"% rms \[Rule] \[CapitalDelta]\[Epsilon]/\
\[Epsilon] = \"\>", "\[InvisibleSpace]", "17.795264335370984`"}],
  SequenceForm[
  "Energy spread ", 4., 
   "% rms \[Rule] \[CapitalDelta]\[Epsilon]/\[Epsilon] = ", 
   17.795264335370984`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6823399047222557`*^9, 3.682339923674739*^9}, 
   3.683265692429044*^9, 3.684065933604229*^9, 3.684080075013864*^9, 
   3.6840801270823*^9, 3.684080192761832*^9, 3.684080315847972*^9, 
   3.6840803579605494`*^9, {3.684080427983963*^9, 3.684080508470084*^9}, 
   3.684081182095786*^9, 3.684082705774061*^9, 3.684082832747946*^9, {
   3.684083364543004*^9, 3.68408337722186*^9}, 3.684083631401569*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1071, 852},
WindowMargins->{{Automatic, 101}, {Automatic, 22}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 9882, 245, 873, "Input"],
Cell[10465, 269, 1954, 28, 32, "Output"],
Cell[12422, 299, 1971, 27, 32, "Output"],
Cell[14396, 328, 1978, 27, 32, "Output"]
}, Open  ]],
Cell[16389, 358, 70, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[16484, 363, 2527, 64, 264, "Input"],
Cell[19014, 429, 761, 10, 234, "Print"],
Cell[19778, 441, 502, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20317, 456, 3367, 69, 201, "Input"],
Cell[23687, 527, 29375, 583, 389, "Output"],
Cell[53065, 1112, 31189, 583, 311, "Output"],
Cell[84257, 1697, 18360, 333, 217, "Output"],
Cell[102620, 2032, 120121, 1962, 261, "Output"],
Cell[222744, 3996, 44096, 789, 217, "Output"],
Cell[266843, 4787, 34572, 615, 264, "Output"],
Cell[301418, 5404, 30996, 765, 263, "Output"],
Cell[CellGroupData[{
Cell[332439, 6173, 823, 15, 24, "Print"],
Cell[333265, 6190, 814, 15, 24, "Print"],
Cell[334082, 6207, 813, 15, 24, "Print"],
Cell[334898, 6224, 813, 15, 24, "Print"]
}, Open  ]]
}, Open  ]]
}
]
*)

